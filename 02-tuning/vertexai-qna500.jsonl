{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that brings together the entire machine learning lifecycle—from data preparation to model training and deployment—into a single, streamlined experience."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI makes it easy for businesses to build and deploy machine learning models at scale. With its unified platform, codeless interface, wide range of pre-trained models and datasets, and ability to scale, Vertex AI can help businesses accelerate their machine learning initiatives."}
{"input_text": "question: What are some use cases for Vertex AI?", "output_text": "Vertex AI can be used for a wide variety of use cases across industries. Some common use cases include image classification, object detection, natural language processing, predictive analytics, fraud detection, and customer churn prediction."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that brings together data engineering, data science, and ML engineering workflows, enabling teams to collaborate using a common toolset and scale their applications using the benefits of Google Cloud."}
{"input_text": "question: What are the different options for model training and deployment in Vertex AI?", "output_text": "Vertex AI offers several options for model training and deployment, including AutoML for training models without writing code, Custom training for complete control over the training process, Model Garden for discovering and deploying pre-trained models, and Generative AI for accessing and customizing Google's large generative AI models."}
{"input_text": "question: What are the MLOps tools available in Vertex AI?", "output_text": "Vertex AI provides a range of MLOps tools for automating and scaling ML projects throughout the ML lifecycle, including tools for model evaluation, deployment, monitoring, and retraining. These tools are run on fully-managed infrastructure that can be customized based on performance and budget requirements."}
{"input_text": "question: What is the difference between PaLM API for text and PaLM API for chat?", "output_text": "PaLM API for text is fine-tuned for language tasks such as classification, summarization, and entity extraction. PaLM API for chat is fine-tuned for multi-turn chat, where the model keeps track of previous messages in the chat and uses it as context for generating new responses."}
{"input_text": "question: What is model tuning?", "output_text": "Model tuning is the process of customizing the default behavior of Google's foundation models so that they consistently generate the desired results without using complex prompts."}
{"input_text": "question: What is streaming?", "output_text": "Streaming is a feature that allows you to receive responses from Generative AI models in real time. Rather than packaging all of the output tokens into a single response, you receive output tokens as soon as the model generates them."}
{"input_text": "question: What are the different ways to access the Vertex AI API?", "output_text": "You can access the API via REST, gRPC, or one of the provided client libraries (built on gRPC)."}
{"input_text": "question: What are the pros and cons of using client libraries?", "output_text": "Pros: Maintained by Google.Built-in authentication.Built-in retries.Idiomatic for each language.Efficient protocol buffer HTTP request body.Cons: Not available for all programming languages."}
{"input_text": "question: What are the pros and cons of using REST?", "output_text": "Pros: Simple JSON interface.Well supported by many Google and third-party tools and libraries.Cons: You must build your own client.You must implement authentication.You must implement retries.Less efficient JSON HTTP request body.REST streaming is not supported by this API."}
{"input_text": "question: How do I deploy a model to AI Platform Prediction?", "output_text": "```# Create an AI Platform Prediction serviceprediction_service = aiplatform.PredictionService()# Create a model resourcemodel = aiplatform.Model(    display_name=\"my-model\",    artifact_uri=\"gs://my-bucket/my-model\",)# Deploy the model to the prediction serviceprediction_service.deploy_model(model)```"}
{"input_text": "question: How do I create a custom training job?", "output_text": "```# Create a custom training jobtraining_job = aiplatform.CustomTrainingJob(    display_name=\"my-training-job\",    training_python_module=\"my_module.py\",    training_args=[\"arg1\", \"arg2\"],)# Submit the training jobtraining_job.submit()```"}
{"input_text": "question: How do I create a batch prediction job?", "output_text": "```# Create a batch prediction jobbatch_prediction_job = aiplatform.BatchPredictionJob(    display_name=\"my-batch-prediction-job\",    model_name=\"my-model\",    input_config={\"instances\": [\"instance1\", \"instance2\"]},    output_config={\"predictions_format\": \"json\"},)# Submit the batch prediction jobbatch_prediction_job.submit()```"}
{"input_text": "question: How can I get support for Vertex AI?", "output_text": "There are several ways to get support for Vertex AI, including:* Asking a question on Stack Overflow using the tag google-cloud-vertex-ai* Filing a bug or feature request from the Vertex AI documentation* Using the creating cases process to file bugs or request features for NAS"}
{"input_text": "question: What machine learning frameworks are supported by Vertex AI?", "output_text": "Vertex AI provides prebuilt containers with the following machine learning (ML) frameworks: PyTorch, scikit-learn, TensorFlow, and XGBoost."}
{"input_text": "question: What is the difference between Vertex AI Pipelines and Kubeflow running on a GKE cluster?", "output_text": "Vertex AI Pipelines is a managed service that implements the Kubeflow SDK. It is fully backed by the SLA and covered by the standard support options.Kubeflow running on a GKE cluster is not covered by the standard support options."}
{"input_text": "question: hat is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: hat are the benefits of using Vertex AI?", "output_text": "Vertex AI offers a number of benefits, including:* A unified platform for all your machine learning needs* Easy-to-use tools for building and deploying models* A scalable and secure infrastructure* A team of experts to help you succeed"}
{"input_text": "question: ow can I get started with Vertex AI?", "output_text": "To get started with Vertex AI, you can:* Visit the Vertex AI website* Read the Vertex AI documentation* Join the Vertex AI community* Take a Vertex AI course"}
{"input_text": "question: What is the first step in setting up a project for Vertex AI?", "output_text": "Select or create a Google Cloud project."}
{"input_text": "question: What APIs need to be enabled for Vertex AI?", "output_text": "IAM, Compute Engine, Notebooks, Cloud Storage, and Vertex AI APIs"}
{"input_text": "question: What IAM roles need to be granted to the user?", "output_text": "Vertex AI User (roles/aiplatform.user) and Storage Admin (roles/storage.admin)"}
{"input_text": "question: What is the purpose of this document?", "output_text": "The purpose of this document is to provide instructions on how to set up your project and environment for using Vertex AI."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: What is AutoML?", "output_text": "AutoML automates the process of building and training machine learning models, making it easier for developers to create and deploy models."}
{"input_text": "question: What is the first step in setting up a Google Cloud project for Vertex AI?", "output_text": "Go to the project selector page and select or create a Google Cloud project."}
{"input_text": "question: What APIs need to be enabled for Vertex AI?", "output_text": "IAM, Compute Engine, Notebooks, Cloud Storage, and Vertex AI APIs"}
{"input_text": "question: What is the goal of the trained model?", "output_text": "The goal of the trained model is to predict if a bank customer will purchase a term deposit."}
{"input_text": "question: What type of model are we going to build?", "output_text": "Binary classification model"}
{"input_text": "question: What dataset are we going to use?", "output_text": "Bank marketing open-source dataset"}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: What is a Cloud Storage bucket?", "output_text": "Cloud Storage is a service that offers scalable, durable, and highly available data storage. A bucket is a container for your data in Cloud Storage."}
{"input_text": "question: What is a Cloud Function?", "output_text": "Cloud Functions is a serverless compute service that allows you to run stateless functions that respond to events."}
{"input_text": "question: hat is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: hat are the benefits of using Vertex AI?", "output_text": "Vertex AI offers a number of benefits, including:* A unified platform for all your machine learning needs* Easy-to-use tools for building, deploying, and managing models* A wide range of pre-trained models* The ability to scale your machine learning workloads"}
{"input_text": "question: hat are some of the use cases for Vertex AI?", "output_text": "Vertex AI can be used for a wide variety of use cases, including:* Image classification* Object detection* Natural language processing* Predictive analytics* Fraud detection* Customer churn prediction"}
{"input_text": "question: What is the difference between AI Platform Training and Vertex AI custom training?", "output_text": "The main difference between AI Platform Training and Vertex AI custom training is that Vertex AI allows you to specify the machine learning framework version to use, submit a training job using a custom container, and specify machine configurations for distributed training."}
{"input_text": "question: What is the difference between AI Platform Prediction and Vertex AI prediction?", "output_text": "The main difference between AI Platform Prediction and Vertex AI prediction is that Vertex AI allows you to select the machine learning framework version to use, run custom code with prediction, and specify machine types."}
{"input_text": "question: What are the differences between legacy AutoML products and AutoML on Vertex AI?", "output_text": "The differences between legacy AutoML products and AutoML on Vertex AI include:Model deployment: In legacy AutoML, you deploy a model directly to make it available for online predictions. In Vertex AI, you create an Endpoint object, which provides resources for serving online predictions. You then deploy the model to the endpoint. To request predictions, you call the predict() method.Using project number or project ID: In legacy AutoML, some parts of the documentation show examples using project-number and others show examples using project-id. In Vertex AI, both project-number and project-id work.AutoML Natural Language users: AutoML Natural Language uses the text data type in Vertex AI.AutoML Vision and AutoML Video Intelligence users: In Vertex AI, AutoML Vision and AutoML Video use the image and video data types, respectively.AutoML Tables users: AutoML Tables uses the tabular data type in Vertex AI.API users: There are different API clients for each API resource."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI brings together AI Platform and AutoML services under one unified UI and API to simplify the process of building, training, and deploying machine learning models."}
{"input_text": "question: What are the recommended steps for migrating to Vertex AI?", "output_text": "Use the following recommended steps to update your existing code, jobs, datasets, and models from AutoML and AI Platform to Vertex AI."}
{"input_text": "question: What are the costs for Vertex AI?", "output_text": "The costs for Vertex AI remain the same as they are for the legacy AI Platform and AutoML products that Vertex AI supersedes, with the following exceptions:Legacy AI Platform Prediction and AutoML Tables predictions supported lower-cost, lower-performance machine types that aren't supported for Vertex AI Prediction and AutoML tabular.Legacy AI Platform Prediction supported scale-to-zero, which isn't supported for Vertex AI Prediction."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that lets you build, deploy, and manage machine learning models."}
{"input_text": "question: What are the different ways to train a model in Vertex AI?", "output_text": "You can train a model in Vertex AI using AutoML, Custom training, Model Garden, or Generative AI"}
{"input_text": "question: What are the different ways to deploy a model in Vertex AI?", "output_text": "You can deploy a model in Vertex AI using prebuilt or custom containers, batch predictions, or online serving."}
{"input_text": "question: What is the price for training an AutoML tabular model?", "output_text": "$21.252 per node hour"}
{"input_text": "question: What is the price for training an AutoML video action recognition model?", "output_text": "$3.300 per node hour"}
{"input_text": "question: What is the price for deploying an AutoML image classification model?", "output_text": "$1.375 per node hour"}
{"input_text": "question: What's new in Vertex AI Workbench?", "output_text": "Vertex AI Workbench instances are now generally available (GA)."}
{"input_text": "question: What's new in Vertex AI?", "output_text": "Vertex AI Prediction now supports A2 Ultra machines."}
{"input_text": "question: What's new in Colab Enterprise?", "output_text": "Colab Enterprise is now available in Preview."}
{"input_text": "question: What is Vertex AI Pipelines?", "output_text": "Vertex AI Pipelines helps you automate, monitor, and governyour ML workflows."}
{"input_text": "question: What is Vertex ML Metadata?", "output_text": "Vertex ML Metadata lets you record the metadata,parameters, and artifacts that are used in your ML system. You can thenquery that metadata to help analyze, debug, and audit the performance ofyour ML system or the artifacts that it produces."}
{"input_text": "question: What is Vertex AI Experiments?", "output_text": "Vertex AI Experiments lets you track and analyzedifferent model architectures, hyper-parameters, and training environmentsto identify the best model for your use case. Vertex AI TensorBoard helps you track, visualize, andcompare ML experiments to measure how well your models perform."}
{"input_text": "question: hat is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: hat are the different interfaces that you can use to interact with Vertex AI?", "output_text": "The different interfaces that you can use to interact with Vertex AI are:* Google Cloud console* gcloud* Terraform* Python* Client libraries* REST API"}
{"input_text": "question: hen should you use the Google Cloud console to interact with Vertex AI?", "output_text": "You should use the Google Cloud console to interact with Vertex AI if you prefer to view and manage your Vertex AI resources and visualizations through a graphical user interface."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform."}
{"input_text": "question: What are the benefits of using Vertex AI?", "output_text": "Vertex AI makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: What are some use cases for Vertex AI?", "output_text": "Vertex AI can be used for a variety of use cases, including:* Image classification* Object detection* Tabular data prediction* Text classification* Video classification"}
{"input_text": "question: What are the benefits of using a managed service for custom training?", "output_text": "Benefits of using a managed service for custom training include:"}
{"input_text": "question: What are the steps involved in custom training on Vertex AI?", "output_text": "The steps involved in custom training on Vertex AI are:"}
{"input_text": "question: What are the recommended training application structure?", "output_text": "The recommended training application structure is:"}
{"input_text": "question: What is the difference between batch and online predictions?", "output_text": "Batch prediction is an asynchronous request. It's a good fit when you don't require an immediate response and want to process accumulated data in a single request. Online prediction is used when you want to get low latency predictions from data passed to your model on the fly."}
{"input_text": "question: What are the benefits of using a managed prediction service?", "output_text": "A managed prediction service reduces the friction of hosting and using your ML models. It provides an easy way to get predictions from your models without having to worry about the underlying infrastructure."}
{"input_text": "question: What is a Model resource?", "output_text": "A Model resource is a resource in the Vertex AI Model Registry that represents a trained ML model. It contains the model artifacts, such as the model weights and biases, and the model metadata, such as the model name and version."}
{"input_text": "question: What is the goal of this tutorial?", "output_text": "The goal of this tutorial is to walk you through every step required to create predictions in less than an hour."}
{"input_text": "question: What is the first step in this tutorial?", "output_text": "The first step in this tutorial is to create a Google Cloud account and project."}
{"input_text": "question: What is the last step in this tutorial?", "output_text": "The last step in this tutorial is to delete all resources created in the tutorial so you don't incur further charges."}
{"input_text": "question: hat is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: hat are the prerequisites for using Vertex AI?", "output_text": "The prerequisites for using Vertex AI are:* A Google Cloud account* A Google Cloud project that's enabled for billing"}
{"input_text": "question: ow do I find my project ID?", "output_text": "To find your project ID, follow these steps:1. In the Google Cloud console, click the list of projects in the top menu.2. In the dialog box that appears, locate your project. If you don't see your project, you might need to choose a different organization. 3. After you locate your project, make a note of its project ID in the ID column."}
{"input_text": "question: What is the purpose of a tabular dataset?", "output_text": "A tabular dataset is used to train a machine learning model."}
{"input_text": "question: What is the LABEL_COLUMN?", "output_text": "The LABEL_COLUMN is the column that contains the labels for the data."}
{"input_text": "question: What is the BQ_SOURCE?", "output_text": "The BQ_SOURCE is the BigQuery source dataset."}
{"input_text": "question: What is the purpose of the training script?", "output_text": "The training script is responsible for creating and training the custom model. It loads the data, builds, compiles, and trains the model, and exports a TensorFlow SavedModel to the model directory."}
{"input_text": "question: What command-line arguments are passed to the training script?", "output_text": "The following command-line arguments are passed to the training script: label_column, epochs, and batch_size."}
{"input_text": "question: What is the purpose of the AIP_MODEL_DIR environment variable?", "output_text": "The AIP_MODEL_DIR environment variable is used to specify where to save model artifacts. It is set by Vertex AI and contains the URI of a directory for saving model artifacts."}
{"input_text": "question: What is a CustomTrainingJob?", "output_text": "A CustomTrainingJob is a class in the Vertex AI SDK for Python that allows you to create and train a custom model."}
{"input_text": "question: What parameters do you need to pass to the constructor of a CustomTrainingJob?", "output_text": "You need to pass the following parameters to the constructor of a CustomTrainingJob:* display_name: The JOB_NAME variable you created when you defined the command arguments for the Python training script.* script_path: The path to the Python training script you created earlier in this tutorial.* container_url: The URI of a Docker container image that's used to train your model.* requirements: The list of the script's Python package dependencies.* model_serving_container_image_uri: The URI of a Docker container image that serves predictions for your model. This container can be prebuilt or your own custom image. This tutorial uses a prebuilt container."}
{"input_text": "question: How do you create and train a model with a CustomTrainingJob?", "output_text": "To create and train a model with a CustomTrainingJob, you call the run method on your CustomTrainingJob object and pass it the following parameters:* dataset: The tabular dataset you created earlier in this tutorial. This parameter can be a tabular, image, video, or text dataset.* model_display_name: A name for your model.* bigquery_destination: A string that specifies the location of your BigQuery dataset.* args: The command-line arguments that are passed to the Python training script."}
{"input_text": "question: What is the purpose of the test data?", "output_text": "The purpose of the test data is to evaluate the performance of the model on unseen data."}
{"input_text": "question: What is the shape of the test data?", "output_text": "The shape of the test data is (100, 6)."}
{"input_text": "question: What is the purpose of the predict method?", "output_text": "The purpose of the predict method is to make predictions on new data."}
{"input_text": "question: hat is Vertex AI's PyTorch integration?", "output_text": "Vertex AI's PyTorch integration provides prebuilt containers for training and serving PyTorch models, as well as support for distributed training."}
{"input_text": "question: ow can I train a PyTorch model on Vertex AI?", "output_text": "You can train a PyTorch model on Vertex AI using Vertex AI Training."}
{"input_text": "question: ow can I deploy a PyTorch model on Vertex AI?", "output_text": "You can deploy a PyTorch model on Vertex AI using a prebuilt Docker container image."}
{"input_text": "question: hat is Vertex AI's TensorFlow integration?", "output_text": "Vertex AI's TensorFlow integration provides prebuilt containers for training and serving TensorFlow models, distributed training, and integration with the TensorFlow Profiler."}
{"input_text": "question: hat are the benefits of using Vertex AI's TensorFlow integration?", "output_text": "Using Vertex AI's TensorFlow integration can help you to train, deploy, and orchestrate TensorFlow models in production more easily and efficiently."}
{"input_text": "question: hat resources are available to help me learn more about using TensorFlow on Vertex AI?", "output_text": "These resources can help you to get started with using TensorFlow on Vertex AI and to learn more about its features and capabilities."}
{"input_text": "question: hat is Vertex AI?", "output_text": "Vertex AI is an AI/ML platform that lets you train and deploy models, and manage the ML lifecycle."}
{"input_text": "question: hat is BigQuery?", "output_text": "BigQuery is a serverless, multicloud enterprise data warehouse that helps you manage and analyze your data."}
{"input_text": "question: hat is BigQuery ML?", "output_text": "BigQuery ML is a service that lets you train machine learning models directly in BigQuery."}
{"input_text": "question: What is Timeseries Insights API?", "output_text": "Timeseries Insights API is a fully-managed solution that enables you to forecast and detect anomalies over billions of events in real time."}
{"input_text": "question: What is Tabular forecasting?", "output_text": "Tabular forecasting is a forecasting option that allows you to build your own model to forecast based on structured time series data using Vertex AI Tabular forecasting."}
{"input_text": "question: What are the benefits of using Timeseries Insights API?", "output_text": "The benefits of using Timeseries Insights API include the ability to forecast and detect anomalies over billions of events in real time, analyze data stored in Google Cloud storage products, and stream data in real time."}
{"input_text": "question: What is Vertex AI?", "output_text": "Vertex AI is a unified machine learning platform that makes it easy to build, deploy, and manage machine learning models."}
{"input_text": "question: How do I set up a project for Vertex AI?", "output_text": "To set up a project for Vertex AI, follow these steps:1. Sign in to your Google Cloud account.2. In the Google Cloud console, on the project selector page, select or create a Google Cloud project.3. Make sure that billing is enabled for your Google Cloud project.4. Enable the Vertex AI API.5. Install the Google Cloud CLI."}
{"input_text": "question: What roles are required to use Vertex AI?", "output_text": "The following roles are required to use Vertex AI:* Vertex AI User (roles/aiplatform.user)* Vertex AI Administrator (roles/aiplatform.admin)* Notebooks Administrator (roles/notebooks.admin)* Service Account User (roles/iam.serviceAccountUser)* Service Usage Admin (roles/serviceusage.serviceUsageAdmin)"}
{"input_text": "question: What is the Vertex AI SDK for Python?", "output_text": "The Vertex AI SDK for Python is a library that allows you to automate your machine learning (ML) workflows."}
{"input_text": "question: How do I install the Vertex AI SDK for Python?", "output_text": "To install the Vertex AI SDK for Python, you can run the following command in your virtual environment:pip install google-cloud-aiplatform"}
{"input_text": "question: How do I initialize the Vertex AI SDK for Python?", "output_text": "To initialize the Vertex AI SDK for Python, you can use the following method:def init_sample(    project: Optional[str] = None,    location: Optional[str] = None,    experiment: Optional[str] = None,    staging_bucket: Optional[str] = None,    credentials: Optional[auth_credentials.Credentials] = None,    encryption_spec_key_name: Optional[str] = None,    service_account: Optional[str] = None,):    from google.cloud import aiplatform    aiplatform.init(        project=project,        location=location,        experiment=experiment,        staging_bucket=staging_bucket,        credentials=credentials,        encryption_spec_key_name=encryption_spec_key_name,        service_account=service_account,    )"}
{"input_text": "question: What is Model Garden?", "output_text": "Model Garden is a platform that helps you discover, test, customize, and deploy AI models."}
{"input_text": "question: What are the different categories of models available in Model Garden?", "output_text": "The different categories of models available in Model Garden are foundation models, fine-tunable models, and task-specific solutions."}
{"input_text": "question: How can I finetune a model in Model Garden?", "output_text": "You can finetune a model in Model Garden using a custom notebook or pipeline."}
{"input_text": "question: What is the purpose of the CSV file?", "output_text": "The CSV file is used to import images into the dataset. The first column lists an image's URI in Cloud Storage, and the second column contains the image's label."}
{"input_text": "question: What is the name of the dataset used in this tutorial?", "output_text": "The dataset used in this tutorial is the flower dataset used in this Tensorflow blog post."}
{"input_text": "question: What is the region that should be selected when creating the dataset?", "output_text": "When creating the dataset, the US Central region should be selected."}
{"input_text": "question: What are the two types of data issues that you might want to pay attention to when analyzing test results?", "output_text": "Label inconsistency and outliers."}
{"input_text": "question: What is the definition of a true positive?", "output_text": "A true positive is a test image that is correctly classified as positive."}
{"input_text": "question: What is the purpose of the Review similar images panel?", "output_text": "The Review similar images panel helps you identify visually similar samples from the training set to help train the model."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "Select your trained AutoML model. This takes you to the Evaluate tab where you can view model performance metrics.Choose the tab Deploy & test tab.Click Deploy to endpoint.Choose radio_button_checkedCreate newendpoint, set the endpoint name to hello_automl_image, then clickContinue.In Model settings, accept the Traffic split of100%, enter 1 in Number of compute nodes, then click Done.Click Deploy to deploy your model to your new endpoint."}
{"input_text": "question: How do I send a prediction to my model?", "output_text": "Navigate to the \"Test your model\" section of the same Deploy & test tabyou used to create an endpoint in the previous step(Models > your_model > tab Deploy & test).Click Upload image and choose a locally saved image for prediction, andview its predicted label."}
{"input_text": "question: What's next?", "output_text": "Follow the last page of the tutorial to clean upresources that you have created."}
{"input_text": "question: How do I delete my Cloud Storage bucket?", "output_text": "In the Google Cloud console, go to the Cloud Storage Browser page. Click the checkbox for the bucket that you want to delete. To delete the bucket, click delete Delete, and then follow the instructions."}
{"input_text": "question: How do I delete my dataset?", "output_text": "In the Google Cloud console, in the Vertex AI section, go to the Datasets page. Find your dataset. On that row, click the three vertical dots more_vert, then click Delete dataset. In Delete dataset, click Delete."}
{"input_text": "question: How do I delete my model?", "output_text": "In the Google Cloud console, in the Vertex AI section, go to the Models page. Find your model. On that row, click the three vertical dots more_vert, then click Delete model. In Delete model and all of its associated versions, click Delete."}
{"input_text": "question: What is the goal of the trained model?", "output_text": "The goal of the trained model is to predict if a bank customer will purchase a term deposit."}
{"input_text": "question: What type of model are we going to build?", "output_text": "Binary classification model"}
{"input_text": "question: What dataset are we going to use?", "output_text": "Bank Marketing dataset"}
{"input_text": "question: What is the first step in setting up a project and environment for tabular data?", "output_text": "The first step in setting up a project and environment for tabular data is to enable the IAM, Compute Engine, Notebooks, Cloud Storage, and Vertex AI APIs."}
{"input_text": "question: What is the purpose of the training budget?", "output_text": "The training budget determines the amount of time that the model will be trained for."}
{"input_text": "question: What happens after the model is trained?", "output_text": "You will receive an email when training is complete."}
{"input_text": "question: What is the purpose of the target column?", "output_text": "The target column is what we're training the model to predict."}
{"input_text": "question: What is the purpose of the Evaluate panel?", "output_text": "The Evaluate panel helps you understand how well the model performed against the test set."}
{"input_text": "question: What does the confusion matrix show?", "output_text": "The confusion matrix shows how the model's predictions compare to the actual labels in the test set."}
{"input_text": "question: What does feature importance show?", "output_text": "Feature importance shows how each feature impacted model training. The higher the value, the more impact the feature had on the model's predictions."}
{"input_text": "question: How do I delete an endpoint in Vertex AI?", "output_text": "In the Google Cloud console, in the Vertex AI section, go to the Endpoints page. Click your endpoint to open its details page. On the row for your model, click Undeploy model delete. In the Undeploy model from endpoint dialog, click Undeploy. Return to the Endpoints tab, and find your endpoint. Click View more more_vert. Click Remove endpoint and confirm the operation."}
{"input_text": "question: How do I delete a model in Vertex AI?", "output_text": "In the Google Cloud console, in the Vertex AI section, go to the Models page. Find your model. On that row, click View more more_vert. Click Delete model and confirm the operation."}
{"input_text": "question: How do I delete a dataset in Vertex AI?", "output_text": "In the Google Cloud console, in the Vertex AI section, go to the Datasets page. Find your dataset. On that row, click View more more_vert. Click Delete dataset."}
{"input_text": "question: What is the name of the dataset?", "output_text": "text_classification_tutorial"}
{"input_text": "question: What is the region of the dataset?", "output_text": "us-central1"}
{"input_text": "question: What is the type of the dataset?", "output_text": "Text classification (Single-label)"}
{"input_text": "question: What is the first step to training an AutoML text classification model?", "output_text": "Go to the Model Registry page."}
{"input_text": "question: What is the second step to training an AutoML text classification model?", "output_text": "For Region, select us-central1 (Iowa)."}
{"input_text": "question: What is the third step to training an AutoML text classification model?", "output_text": "Select Create to open the Train new model window."}
{"input_text": "question: What is the name of the model?", "output_text": "hello_automl_text"}
{"input_text": "question: What is the region of the model?", "output_text": "us-central1 (Iowa)"}
{"input_text": "question: What is the traffic split of the model?", "output_text": "100%"}
{"input_text": "question: How do I delete my endpoint?", "output_text": "In the Google Cloud console, go to the Endpoints page.Go to Endpoints Click your endpoint.On the endpoint details page, find the row for your model. Clickmore_vert View more >Undeploy model from endpoint.In the Undeploy model from endpoint dialog, click Undeploy.Go back to the Endpoints page.Find your endpoint, clickmore_vert View more >Delete endpoint.In the Delete endpoint dialog, click Confirm."}
{"input_text": "question: How do I delete my model?", "output_text": "In the Google Cloud console, go to the Model Registry page.Go to the Model Registry page Find your model, click more_vert View more > Delete model.In the Delete model dialog, click Delete."}
{"input_text": "question: How do I delete my dataset?", "output_text": "In the Google Cloud console, in the Vertex AI section, go tothe Datasets page.Go to the Datasets page Find your dataset, click more_vert View more > Delete dataset."}
{"input_text": "question: What is the name of the Cloud Storage bucket that contains the CSV file?", "output_text": "automl-video-demo-data"}
{"input_text": "question: What is the region tag for the dataset?", "output_text": "us-central1"}
{"input_text": "question: What is the name of the annotation set that contains the newly imported data?", "output_text": "demo-data_vcn"}
{"input_text": "question: How long does it take to train a model?", "output_text": "Training takes several hours for this demo dataset."}
{"input_text": "question: How do I check the current training status?", "output_text": "Click the training job \"demo_data\" in the panel on the right."}
{"input_text": "question: What happens after training is completed?", "output_text": "You will be taken to the Evaluate tab where you can view model performance metrics."}
{"input_text": "question: What is the purpose of this document?", "output_text": "This document is a tutorial."}
{"input_text": "question: What is the first step in the process?", "output_text": "The first step is to set up your project."}
{"input_text": "question: What is the purpose of the batch prediction?", "output_text": "The purpose of the batch prediction is to classify a list of videos."}
{"input_text": "question: How do I delete my model?", "output_text": "Find your model. On that row, click Viewmore more_vert. Thenclick Delete model.In the Delete model dialog, click Delete."}
{"input_text": "question: How do I delete my dataset?", "output_text": "Find your dataset. On that row, click Viewmore more_vert. Thenclick Delete dataset."}
{"input_text": "question: How do I delete my Cloud Storage bucket?", "output_text": "Click the checkbox for the bucket that you want to delete.To delete the bucket,click delete Delete, and then follow theinstructions."}
{"input_text": "question: What is the purpose of the Vertex AI Pipelines?", "output_text": "Vertex AI Pipelines is a tool that allows you to build and manage end-to-end machine learning workflows. It provides a graphical interface for creating and connecting components, as well as the ability to track the progress of your pipelines."}
{"input_text": "question: What are the steps involved in running an ML model training pipeline?", "output_text": "The steps involved in running an ML model training pipeline are as follows:1. Import and transform data.2. Train a model using the selected ML framework.3. Import the trained model to Vertex AI Model Registry.4. Optional: Deploy the model for online serving with Vertex AI Prediction."}
{"input_text": "question: What components are used in the sample code?", "output_text": "The sample code uses the following components:* Download from GCS* Select columns using Pandas on CSV data* Fill all missing values using Pandas on CSV data* Binarize column using Pandas on CSV data* Split rows into subsets* Create fully connected TensorFlow network* Train model using Keras on CSV* Predict with TensorFlow model on CSV data* Upload TensorFlow model to Google Cloud Vertex AI* Deploy model to endpoint"}
{"input_text": "question: What is the purpose of the Model output directory field?", "output_text": "The Model output directory field is used to specify the location where the training artifacts will be stored."}
{"input_text": "question: What is the purpose of the Prediction container step?", "output_text": "The Prediction container step is used to specify the container that will be used to serve predictions."}
{"input_text": "question: What is the purpose of the Compute and pricing step?", "output_text": "The Compute and pricing step is used to specify the resources that will be used for the training job."}
{"input_text": "question: What is the purpose of creating an endpoint?", "output_text": "Endpoints serve online predictions from one or more models."}
{"input_text": "question: What is the purpose of deploying a Cloud Function?", "output_text": "You can configure a Cloud Function to receive unauthenticatedrequests. Additionally, functions run using a service account with the Editorrole by default, which includesthe aiplatform.endpoints.predict permission necessary to get predictionsfrom your Vertex AI endpoint."}
{"input_text": "question: What is the purpose of deploying a web app?", "output_text": "to send prediction requests"}
{"input_text": "question: How do I delete my Vertex AI resources?", "output_text": "You can delete your Vertex AI resources by following these steps:1. Undeploy your model from your endpoint.2. Delete your endpoint.3. Delete your model.4. Delete your custom training pipeline and job.5. Clean up your Cloud Shell session.6. Delete your Cloud Storage bucket.7. Delete your Cloud Function."}
{"input_text": "question: What is the next step after cleaning up my project?", "output_text": "After cleaning up your project, you can learn about additional ways to train ML models on Vertex AI by trying one of the other Vertex AI tutorials. You can also read an overview of how Vertex AI works."}
{"input_text": "question: How do I delete my Cloud Storage bucket?", "output_text": "To delete your Cloud Storage bucket, run the following command in your Cloud Shell session:```gsutil -m rm -rf gs://BUCKET_NAME```Replace BUCKET_NAME with the name of the Cloud Storage bucket that you created when reading the first page of this tutorial."}
{"input_text": "question: What is the purpose of the sample code provided?", "output_text": "The sample code provided demonstrates how to use Vertex AI Pipelines to run an end-to-end ML workflow, including the following tasks:* Import and transform data.* Fine-tune an image classification model from TFHub using the transformed data.* Import the trained model to Vertex AI Model Registry.* Optional: Deploy the model for online serving with Vertex AI Prediction."}
{"input_text": "question: What components are used in the sample code?", "output_text": "The following components are used in the sample code:* Upload_Tensorflow_model_to_Google_Cloud_Vertex_AI_op* deploy_model_to_endpoint_op* transcode_imagedataset_tfrecord_from_csv_op* load_image_classification_model_from_tfhub_op* preprocess_image_data_op* train_tensorflow_image_classification_model_op"}
{"input_text": "question: How do I submit the pipeline for execution?", "output_text": "You can submit the pipeline for execution using the following command:`from google.cloud import aiplatformaiplatform.PipelineJob.from_pipeline_func(pipeline_func=pipeline_func).submit()`"}
{"input_text": "question: hat is Vertex AI SDK?", "output_text": "The Vertex AI SDK is a comprehensive set of classes written inPython that lets you automate an ML workflow. With theVertex AI SDK, you can use the Python language toaccomplish anything you can do in the Google Cloud console."}
{"input_text": "question: hat is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a Jupyter notebook-based development environment thatdata scientists can use for their entire ML workflow."}
{"input_text": "question: hat is Terraform?", "output_text": "Terraform is an infrastructure-as-code (IaC) tool that you can useto provision resources and permissions for multiple Google Cloud services,including Vertex AI."}
{"input_text": "question: What is the Vertex AI SDK for Python?", "output_text": "The Vertex AI SDK for Python is a high-level Python library that helps you automate data ingestion, train models, and get predictions on Vertex AI."}
{"input_text": "question: Why use the Vertex AI SDK for Python?", "output_text": "The Vertex AI SDK for Python is recommended if you're an experienced machine learning (ML) and artificial intelligence (AI) engineer or a data scientist who wants to programmatically automate your workflow."}
{"input_text": "question: How to use the Vertex AI SDK for Python?", "output_text": "Install the google-cloud-aiplatform package, which includes both the Vertex AI SDK for Python and the Vertex AI Python client library, by running the following command in your virtual environment:pip install google-cloud-aiplatformUse the following code to import the google.cloud.aiplatform namespace:from google.cloud import aiplatform"}
{"input_text": "question: What is Vertex AI SDK?", "output_text": "The Vertex AI SDK is a Python library that helps data scientists and machine learning engineers build, train, and deploy machine learning models."}
{"input_text": "question: What are the benefits of using Vertex AI SDK?", "output_text": "The Vertex AI SDK offers several benefits, including:* A unified API for working with all of Vertex AI's services* The ability to create and manage custom ML workflows* Support for both structured and unstructured data* A variety of built-in algorithms and models* The ability to deploy models to a variety of platforms"}
{"input_text": "question: What are some of the classes included in the Vertex AI SDK?", "output_text": "Some of the classes included in the Vertex AI SDK are:* Data classes: These classes work with structured data, unstructured data, and the Vertex AI Feature Store.* Training classes: These classes work with AutoML training for structured and unstructured data, custom training, hyperparameter training, and pipeline training.* Model classes: These classes work with models and model evaluations.* Prediction classes: These classes work with batch predictions, online predictions, and Vector Search predictions.* Tracking classes: These classes work with Vertex ML Metadata, Vertex AI Experiments, and Vertex AI TensorBoard."}
{"input_text": "question: What are some of the classes included in the Vertex AI SDK?", "output_text": "Use this class to work with tabular datasets. You can use a CSV file or a pandasDataFrameto create a tabular dataset."}
{"input_text": "question: What is an ImageDataset?", "output_text": "Use this class to work with a managed image dataset. To create a managed imagedataset, you need a datasource file in CSV format and a schema file in YAMLformat. A schema is optional for a custom model. The CSV file and the schema areaccessed in Cloud Storage buckets."}
{"input_text": "question: What is a Featurestore?", "output_text": "The featurestore resource, represented by the Featurestore class, is thetop-level class in the Vertex AI Feature Store data model hierarchy."}
{"input_text": "question: What are the three custom training pipeline classes?", "output_text": "CustomTrainingJob, CustomContainerTrainingJob, CustomPythonPackageTrainingJob"}
{"input_text": "question: What is the difference between a custom training job and a custom training pipeline?", "output_text": "A custom training job is more flexible than a training pipeline because you aren'trestricted to loading your data in a Vertex AI managed dataset and areference to your model isn't registered after the training job completes."}
{"input_text": "question: What are the benefits of using the AutoML training method?", "output_text": "The AutoML training method is a good choice for most forecasting use cases because it is:- Simple to use- Fast- Accurate"}
{"input_text": "question: How do I create a registered model?", "output_text": "To create a registered model, you can use the run method on a training job class."}
{"input_text": "question: How do I create an unregistered model?", "output_text": "To create an unregistered model, you can use the CustomJob class and its run method."}
{"input_text": "question: How do I register a model?", "output_text": "To register a model, you can use the Model.upload method."}
{"input_text": "question: What is the difference between batch prediction and online prediction?", "output_text": "Batch prediction is a group of asynchronous prediction requests. Online prediction is a synchronous request made to a model endpoint."}
{"input_text": "question: What is the BatchPredictionJob class?", "output_text": "BatchPredictionJob is the one class in the Vertex AI SDK that is specific to batch predictions."}
{"input_text": "question: What is the ModelDeploymentMonitoringJob class?", "output_text": "ModelDeploymentMonitoringJob is used to monitor your model and receive alerts if it deviates in a way that might impact the quality of your model's predictions."}
{"input_text": "question: What is the Artifact class?", "output_text": "The Artifact class represents the metadata in an artifact in Vertex AI."}
{"input_text": "question: What is the ExperimentRun class?", "output_text": "The ExperimentRun class represents a run of an experiment."}
{"input_text": "question: What is the Tensorboard class?", "output_text": "The Tensorboard class represents a managed resource that stores Vertex AI TensorBoard experiments."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed notebook environment that provides several Jupyter notebook-basedinstance types for your data science workflow."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench?", "output_text": "The benefits of using Vertex AI Workbench include:* Prepackaged with JupyterLab.* A preinstalled suite of deep learning packages, including support forthe TensorFlow and PyTorch frameworks.* Support for GPU accelerators.* The ability to sync with a GitHub repository.* Google Cloud authentication and authorization."}
{"input_text": "question: What are the different instance types available in Vertex AI Workbench?", "output_text": "The different instance types available in Vertex AI Workbench are:* Vertex AI Workbench instances* Vertex AI Workbench managed notebooks* Vertex AI Workbench user-managed notebooks"}
{"input_text": "question: How do I create a Colab Enterprise notebook?", "output_text": "To create a Colab Enterprise notebook, go to the Colab Enterprise Notebooks page in the Google Cloud console. Click the Create a notebook button and select the region where you want to create your notebook. Enter a name for your notebook and click Create."}
{"input_text": "question: How do I run code in a default runtime?", "output_text": "To run code in a default runtime, open the notebook that you want to run. Hold the pointer over the code cell that you want to run and click the Run cell button. If this is your first time connecting to a runtime with end-user credentials enabled, a Sign in dialog appears."}
{"input_text": "question: How do I upload a notebook?", "output_text": "To upload a notebook, go to the Colab Enterprise Notebooks page in the Google Cloud console. Click the Upload notebook file button and select the notebook that you want to upload. The notebook must be fewer than 10 MB. Click Upload."}
{"input_text": "question: How do I connect to a runtime in Colab Enterprise?", "output_text": "There are three ways to connect to a runtime in Colab Enterprise:Use the default runtime.Connect to an existing runtime.Create a runtime."}
{"input_text": "question: What is the default runtime in Colab Enterprise?", "output_text": "The default runtime is a runtime that is automatically created for you when you first create a notebook in Colab Enterprise."}
{"input_text": "question: How do I connect to an existing runtime in Colab Enterprise?", "output_text": "To connect to an existing runtime:In the Google Cloud console, go tothe Colab Enterprise Notebooks page.In the Region menu, select the region that contains your notebook.On the My notebooks tab, click the notebookthat you want to open. If you haven't created a notebook yet,create a notebook.In your notebook, click the Additional connection options expander arrow,and then select Connect to a runtime.The Connect to Vertex AI runtime dialog opens.For Select a runtime,select Connect to an existing runtime.For Select an existing runtime option,select the runtime that you want to connect to. If there aren'tany runtimes in the list,create a runtime orconnect to the default runtime.Click Connect."}
{"input_text": "question: What is a runtime template?", "output_text": "A runtime template is a configuration file that defines the settings for a runtime."}
{"input_text": "question: What are the required roles to create a runtime template?", "output_text": "To create a runtime template, you need the Colab Enterprise Admin (roles/aiplatform.colabEnterpriseAdmin) IAM role on the project."}
{"input_text": "question: How do I grant access to a runtime template?", "output_text": "To grant access to a runtime template, you need to give the principal the following:* Access to the runtime template.* The required permissions for creating runtimes."}
{"input_text": "question: What is Colab Enterprise?", "output_text": "Colab Enterprise is a managed Jupyter notebook environment that lets you run code in the cloud."}
{"input_text": "question: How do I create a runtime in Colab Enterprise?", "output_text": "To create a runtime, go to the Colab Enterprise Runtimes page, select the region where you want your runtime, and click Create runtime."}
{"input_text": "question: What are the benefits of using Colab Enterprise?", "output_text": "Colab Enterprise provides a number of benefits, including:* A managed environment that takes care of the infrastructure so you can focus on your code.* A variety of runtime templates that you can use to quickly get started.* The ability to connect to your runtime from anywhere."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a cloud-based development environment that allows data scientists to collaborate on projects and share resources."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench?", "output_text": "Some of the benefits of using Vertex AI Workbench include the ability to access and explore data from within a Jupyter notebook, automate recurring updates to models, process data quickly, and run notebooks as steps in a pipeline."}
{"input_text": "question: What are the different instance types of Vertex AI Workbench?", "output_text": "The different instance types of Vertex AI Workbench are Vertex AI Workbench instances, Vertex AI Workbench managed notebooks, and Vertex AI Workbench user-managed notebooks."}
{"input_text": "question: How do I open a notebook tutorial in a Vertex AI Workbench instance?", "output_text": "Click the Vertex AI Workbench link in the notebook list."}
{"input_text": "question: How do I open a notebook tutorial in Colab?", "output_text": "Click the Colab link in the notebook list."}
{"input_text": "question: What is AutoML?", "output_text": "AutoML automates the process of building and training machine learning models."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed service that provides a Jupyter notebook-based development environment for data scientists and machine learning engineers. It comes with pre-installed packages and integrations with other Google Cloud services, making it easy to access and process data, train models, and deploy them to production."}
{"input_text": "question: How can I access data in Vertex AI Workbench?", "output_text": "You can access data in Vertex AI Workbench using the Cloud Storage integration or the BigQuery integration. The Cloud Storage integration allows you to browse data and other files that you have access to. The BigQuery integration allows you to browse tables that you have access to, write queries, preview results, and load data into your notebook."}
{"input_text": "question: How can I share insights from Vertex AI Workbench?", "output_text": "You can share insights from Vertex AI Workbench by granting access to the results of executed notebook runs. The results are stored in a Cloud Storage bucket, so you can share them with others by giving them access to the bucket."}
{"input_text": "question: How do I create a Vertex AI Workbench instance?", "output_text": "In the Google Cloud console, go to the Instances page. Click Create new. For Name, enter my-instance. Click Create."}
{"input_text": "question: How do I open JupyterLab?", "output_text": "Next to your instance's name, click Open JupyterLab."}
{"input_text": "question: How do I stop my instance?", "output_text": "In the Google Cloud console, go to the Instances page. Select the instance that you want to stop. Click Stop."}
{"input_text": "question: What is the Vertex AI Workbench executor?", "output_text": "The Vertex AI Workbench executor is a service that allows you to run Python notebook files on a schedule."}
{"input_text": "question: How do I create an instance and example notebook file?", "output_text": "To create an instance and example notebook file, follow these steps:1. Create an instance.2. Open JupyterLab.3. Open a new notebook file.4. In the first cell of the notebook file, enter the following:# Import datetimeimport datetime# Get the time and print itdatetime.datetime.now()print(datetime.datetime.now())5. To make sure your notebook file is saved, select File > Save Notebook."}
{"input_text": "question: How do I schedule a run?", "output_text": "To schedule a run, follow these steps:1. In the Google Cloud console, go to the Instances page.2. Next to your instance's name, click Open JupyterLab.3. Your Vertex AI Workbench instance opens JupyterLab.4. In the folder File Browser, double-click the example notebook file to open it.5. Click the  Execute button.6. In the Submit notebooks to Executor dialog, in the Type field, select Schedule-based recurring executions.7. By default, the executor runs your notebook file every hour at the 00 minute of the hour.8. In Advanced options, enter a name for your bucket in the Cloud Storage bucket field, and then click Create and select.9. The executor stores your notebook output in the Cloud Storage bucket.10. Click Submit."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a unified environment that includes all the tools you need to develop and deploy ML models."}
{"input_text": "question: How do I create a Vertex AI Workbench instance?", "output_text": "You can create a Vertex AI Workbench instance by using either the Google Cloud console or the gcloud CLI."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench?", "output_text": "Vertex AI Workbench offers several benefits, including:A unified environment that includes all the tools you need to develop and deploy ML modelsPre-built containers that make it easy to get started with MLManaged infrastructure that takes care of the underlying infrastructure so you can focus on your ML models"}
{"input_text": "question: hy might you want to create a specific version of a Vertex AI Workbench instance?", "output_text": "To ensure that your Vertex AI Workbench instance has software that is compatible with your code or application."}
{"input_text": "question: hat is the format of a Deep Learning VM release number?", "output_text": "An ML followed by the number of the release, for example, M108."}
{"input_text": "question: How can you find the specific image name that you want to use for a specific Deep Learning VM release?", "output_text": "Run the following command:gcloud compute images list --project=\"cloud-notebooks-managed\"  --format=\"value(name)\"  --filter=\"labels.release=RELEASE_NUMBER\"  --show-deprecatedReplace RELEASE_NUMBER with a Deep Learning VM release number, such as M108."}
{"input_text": "question: hat is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed JupyterLab environment that lets you develop and deploy machine learning (ML) models."}
{"input_text": "question: How do I add a conda environment to my Vertex AI Workbench instance?", "output_text": "To add a conda environment, enter the following commands in your instance's JupyterLab terminal:```conda create -n CONDA_ENVIRONMENT_NAMEconda activate CONDA_ENVIRONMENT_NAMEconda install -c PACKAGEconda deactivatepython -m ipykernel install --prefix \"${DL_ANACONDA_HOME}\" --name  CONDA_ENVIRONMENT_NAME --display-name KERNEL_DISPLAY_NAME```Replace the following:* CONDA_ENVIRONMENT_NAME: your choice of name for the environment* PACKAGE: the conda package that you want to install* KERNEL_DISPLAY_NAME: the display name for the tile of the kernel in the JupyterLab interface"}
{"input_text": "question: hat are the benefits of using a conda environment in Vertex AI Workbench?", "output_text": "The benefits of using a conda environment in Vertex AI Workbench include:* Using kernels that aren't available in Vertex AI Workbench instances* Using specific older versions of the available frameworks, such as TensorFlow, PyTorch, or Python"}
{"input_text": "question: What is idle shutdown?", "output_text": "Idle shutdown is a feature that shuts down Vertex AI Workbench instances after a period of inactivity to help manage costs."}
{"input_text": "question: What are the billing implications of idle shutdown?", "output_text": "While your instance is shut down, there are no CPU or GPU usage charges except for scheduled executions that run during the shutdown. Disk storage charges still apply while your instance is shut down."}
{"input_text": "question: How do I disable idle shutdown or change the default inactivity time period?", "output_text": "To disable idle shutdown or to change the inactivity time period on an existing instance, follow these steps:1. In the Google Cloud console, go to the Instances page.2. Click the instance name.3. On the Instance details page, click the Software and security tab.4. In the Modify software and security configuration section:* To disable idle shutdown, clear the check mark next to Enable Idle Shutdown.* To change the inactivity time period, in Time of inactivity before shutdown (Minutes), change the number to the number of minutes of inactivity that you want.5. Click Submit."}
{"input_text": "question: How do I create a new notebook file in Vertex AI Workbench?", "output_text": "To create a new notebook file, select File > New > Notebook. In the Select Kernel dialog, select Python 3, and then click Select."}
{"input_text": "question: How do I query data from BigQuery using the %%bigquery magic command?", "output_text": "To query BigQuery data from within a JupyterLab notebook file, you can use the %%bigquery magic command and the BigQuery client library for Python."}
{"input_text": "question: How do I query data from BigQuery using the BigQuery client library directly?", "output_text": "To use the BigQuery client library for Python directly, you can import the library and initialize a client. Then, you can use the client to send and receive messages from the BigQuery API."}
{"input_text": "question: How can I access Cloud Storage buckets and files in JupyterLab?", "output_text": "To access Cloud Storage buckets and files in JupyterLab, you can use the Cloud Storage integration. This integration lets you browse buckets and work with compatible files located in Cloud Storage from within the JupyterLab interface."}
{"input_text": "question: What are the benefits of using the Cloud Storage integration in JupyterLab?", "output_text": "The Cloud Storage integration in JupyterLab offers several benefits, including:- The ability to browse all of the Cloud Storage buckets and files that your instance has access to within the same project as your Vertex AI Workbench instance.- The ability to open and edit files that are compatible with JupyterLab, such as text files and notebook (IPYNB) files.- The ability to save files by using the File menu in JupyterLab."}
{"input_text": "question: What are the requirements for using the Cloud Storage integration in JupyterLab?", "output_text": "To use the Cloud Storage integration in JupyterLab, you must have access to at least one Cloud Storage bucket in the same project as your Vertex AI Workbench instance. If you need to create a Cloud Storage bucket, you can follow the steps outlined in the \"Create buckets\" documentation."}
{"input_text": "question: What is the BigQuery client library for Python used for?", "output_text": "The BigQuery client library for Python is used to send and receive messagesfrom the BigQuery API."}
{"input_text": "question: What is the purpose of the %%bigquery magic command?", "output_text": "The %%bigquery magic command uses the BigQuery client library for Python to run thegiven query, convert the results to a pandas DataFrame, optionally save theresults to a variable, and then display the results."}
{"input_text": "question: What is the BigQuery Storage API used for?", "output_text": "The BigQuery Storage API is used to download results from the %%bigquery magics."}
{"input_text": "question: What is the BigQuery Storage API used for?", "output_text": "Automatic upgrade and Manual upgrade"}
{"input_text": "question: What components of a Vertex AI Workbench instance are upgraded during an upgrade?", "output_text": "Machine learning frameworks, Preinstalled dependencies, Preinstalled operating system packages, GPU drivers"}
{"input_text": "question: How can I check if a newer version of my instance's environment is available?", "output_text": "Go to the Instances page in the Google Cloud console, click the instance name, and check if a \"This instance needsto be upgraded\" message appears."}
{"input_text": "question: ow can I access JupyterLab if I don't have HTTPS access?", "output_text": "To set upSSH port forwarding,complete the following steps, and then access your JupyterLab session through alocal browser:Run the following command by using the Google Cloud CLI inyour preferred terminal or inCloud Shell:gcloud compute ssh INSTANCE_NAME  --project PROJECT_ID  --zone ZONE  -- -NL 8080:localhost:8080Replace the following:INSTANCE_NAME: the name of your instancePROJECT_ID: yourGoogle Cloud project IDZONE: the zonewhere your instance is locatedAccess your JupyterLab session through a local browser:If you ran the command on your local machine, visithttps://localhost:8080 to access JupyterLab.If you ran the command usingCloud Shell,access JupyterLab through the WebPreview on port 8080."}
{"input_text": "question: hat are some reasons why I might not have HTTPS access to JupyterLab?", "output_text": "The following are common reasons why you might not have HTTPS access toJupyterLab:Your JupyterLab instance's proxy-mode metadata settingis incorrect.Your network is configured to block internet access for thevirtual machines (VMs) running JupyterLab notebooks.Your instance doesn't have an external IP address.Your VPC Service Controls settingsblock access to Container Registry."}
{"input_text": "question: ow can I resolve the issue if my JupyterLab instance's proxy-mode metadata setting is incorrect?", "output_text": "To make sure your proxy-mode metadata setting is valid, completethe following steps:In the Google Cloud console, go to the Instances page.Go to Instances Select the instance that you need to modify.Click Edit.Scroll down to the Custom metadata section, and either add or modifythe metadata to ensure there is a proxy-mode entry setto the correct value, for example: project_editors. Click Save."}
{"input_text": "question: How can I monitor the health status of my Vertex AI Workbench instances?", "output_text": "You can monitor the health of your Vertex AI Workbench instances in a few different ways. This page describes how to use the following methods:Use guest attributes to report system healthReport custom metrics to Cloud MonitoringReport system and application metrics to Monitoring by installing Monitoring on a Vertex AI Workbench instanceUse the diagnostic tool"}
{"input_text": "question: How can I use guest attributes to report system health?", "output_text": "To use guest attributes to report on your Vertex AI Workbench instance's health, you must enable the following guest attributes while creating a Vertex AI Workbench instance:enable-guest-attributes=TRUE: This enables guest attributes on your Vertex AI Workbench instance. All new instances enable this attribute by default.report-system-health=TRUE: This records system health check results to your guest attributes."}
{"input_text": "question: How can I report custom metrics to Monitoring?", "output_text": "To report custom metrics to Monitoring, you must enable the report-notebook-metrics metadata setting while creating a Vertex AI Workbench instance.You must also make sure that the Vertex AI Workbench instance's network is configured to allow traffic to the Cloud Monitoring API."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "A managed service that makes it easy to build, manage, and deploy machine learning (ML) models."}
{"input_text": "question: How can I control access to a Vertex AI Workbench instance?", "output_text": "You can use IAM to manage access to instances and an access mode to manage access to each instance's JupyterLab interface."}
{"input_text": "question: What are the different types of IAM roles that can be used in Vertex AI Workbench?", "output_text": "Predefined roles let you grant a set of related permissions to your Vertex AI Workbench resources at the project level. Custom roles enable you to choose a specific set of permissions, create your own role with those permissions, and grant the role to users in your organization."}
{"input_text": "question: How can I grant access to a specific Vertex AI Workbench instance?", "output_text": "You can grant access to a specific Vertex AI Workbench instance by setting an Identity and Access Management (IAM) policy on the instance."}
{"input_text": "question: What are the limitations of granting access to a Vertex AI Workbench instance?", "output_text": "Even granting a principal full access toa Vertex AI Workbench instance doesn't grantthe ability to use the instance's JupyterLab interface."}
{"input_text": "question: How can I grant access to the JupyterLab interface of a Vertex AI Workbench instance?", "output_text": "Granting a principal access toa Vertex AI Workbench instance doesn't grantthe ability to use the instance's JupyterLab interface.To grant access to the JupyterLab interface, see Manage access to aVertex AI Workbench instance'sJupyterLab interface."}
{"input_text": "question: How can I control access to a Vertex AI Workbench instance's JupyterLab interface?", "output_text": "You control access to a Vertex AI Workbench instance's JupyterLab interface through the instance's access mode."}
{"input_text": "question: What are the different JupyterLab access modes?", "output_text": "Vertex AI Workbench instances support the following access modes: Single user only: The Single user only access mode grants access only to the user that you specify. Service account: The Service account access mode grants access to a service account. You can grant access to one or more users through this service account."}
{"input_text": "question: How can I grant access to a single user?", "output_text": "To grant access to a single user, complete the following steps: Create a Vertex AI Workbench instance with the following specifications: In the Create instance dialog, in the IAM and security section, select the Single user only access mode. In the User email field, enter the user account that you want to grant access. Complete the rest of the dialog, and then click Create."}
{"input_text": "question: What are the benefits of using CMEK with Vertex AI Workbench?", "output_text": "Benefits of CMEKIn general, CMEK is most useful if you need full control over the keys used toencrypt your data. With CMEK, you can manage your keys withinCloud Key Management Service. For example, you can rotate or disable a key or you can setup a rotation schedule by using the Cloud KMS API.When you run a Vertex AI Workbench instance,your instance runson a virtual machine (VM) managed by Vertex AI Workbench.When you enableCMEK for a Vertex AI Workbench instance,Vertex AI Workbench uses the key that you designate,rather than a key managed by Google, to encryptdata on the boot disks of the VM.The CMEK key doesn't encrypt metadata, like the instance's name and region,associated with your Vertex AI Workbench instance.Metadata associated withVertex AI Workbench instances is alwaysencrypted using Google's default encryption mechanism."}
{"input_text": "question: What are the limitations of using CMEK with Vertex AI Workbench?", "output_text": "Limitations of CMEKTo decrease latency and to prevent cases where resources depend onservices that are spread across multiple failure domains, Google recommendsthat you protect regionalVertex AI Workbench instances with keys in the same location.You can encrypt regional Vertex AI Workbench instancesby using keys in the same location or in the global location. For example,you can encrypt data in a disk in zone us-west1-a by usinga key in us-west1 or global.You can encrypt global instances by using keys in any location.Configuring CMEK forVertex AI Workbench doesn't automatically configure CMEKfor other Google Cloud products that you use. To use CMEK to encryptdata in other Google Cloud products, you must complete additionalconfiguration."}
{"input_text": "question: How do I configure CMEK for my Vertex AI Workbench instance?", "output_text": "The following sections describe how to create akey ring and key in Cloud Key Management Service,grant the service account encrypter and decrypter permissions for your key,and create a Vertex AI Workbench instance that uses CMEK."}
{"input_text": "question: What is Vertex AI Workbench managed notebooks instances?", "output_text": "Vertex AI Workbench managed notebooks instances are Google-managed, Jupyter notebook-based, compute infrastructure."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench managed notebooks instances?", "output_text": "Benefits of using Vertex AI Workbench managed notebooks instances include:- Google-managed compute infrastructure- Use custom containers- Notebook-based workflow- Access to data- Execute notebook runs- Share insights- Secure your instance- Automated shutdown for idle instances- Dataproc integration"}
{"input_text": "question: What are the limitations of using Vertex AI Workbench managed notebooks instances?", "output_text": "Limitations of using Vertex AI Workbench managed notebooks instances include:- Managed notebooks instances are Google-managedand therefore less customizable than Vertex AI Workbenchuser-managed notebooks instances.- Third party JupyterLab extensions are not supported.- Managed notebooks instances do not allow users tohave sudo access.- When you use Access Context Managerand BeyondCorp Enterpriseto protect managed notebooks instances withcontext-aware access controls, access is evaluated each timethe user authenticates to the instance. For example, accessis evaluated the first time the user accesses JupyterLab andwhenever they access it thereafter if their web browser'scookie has expired."}
{"input_text": "question: How do I create a managed notebooks instance?", "output_text": "In the Google Cloud console, go to the Managed notebooks page. Click Create new. In the Create instance window, in the Name field, enter my-instance. Click Create."}
{"input_text": "question: How do I open JupyterLab?", "output_text": "Next to your managed notebooks instance's name, click Open JupyterLab."}
{"input_text": "question: How do I stop my instance?", "output_text": "In the Google Cloud console, go to the Managed notebooks page. Select the instance that you want to stop. Click Stop."}
{"input_text": "question: How do I create a managed notebooks instance?", "output_text": "Follow the steps in the Create a managed notebooks instance section of the documentation."}
{"input_text": "question: How do I schedule a run?", "output_text": "Follow the steps in the Schedule a run section of the documentation."}
{"input_text": "question: How do I view the results of a run?", "output_text": "Follow the steps in the View the execution results section of the documentation."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a unified environment that lets you develop, test, and deploy machine learning models."}
{"input_text": "question: How do I create a managed notebooks instance?", "output_text": "You can create a managed notebooks instance by using either the Google Cloud console or the gcloud CLI."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench?", "output_text": "Vertex AI Workbench provides a number of benefits, including:A unified environment for developing, testing, and deploying machine learning modelsA variety of tools and frameworks for machine learningEasy integration with other Google Cloud services"}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed notebooks service that provides a powerful, cloud-based environment for data scientists and machine learning engineers to develop and deploy models."}
{"input_text": "question: What are the requirements for a custom container to be used with Vertex AI Workbench?", "output_text": "To create a custom container image of your own, you can modify one of the Deep Learning Containers container images to create a derivative container image.To create a custom container image from scratch, make sure the container image meets the following requirements:Use a Docker container image with at least one valid Jupyter kernelspec.The Docker container image must support sleep infinity."}
{"input_text": "question: How do I add a custom container to a managed notebooks instance?", "output_text": "To add a custom container to a managed notebooks instance, the custom container image must be specified at instance creation."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a unified environment that lets you develop, test, and deploy machine learning (ML) models."}
{"input_text": "question: How do I create a Dataproc cluster?", "output_text": "To create a Dataproc cluster, enter the following command in either Cloud Shell or another environment where the Google Cloud CLI is installed.gcloud dataproc clusters create CLUSTER_NAME --region=REGION  --enable-component-gateway  --optional-components=JUPYTERReplace the following:REGION: the Google Cloud location ofyour managed notebooks instanceCLUSTER_NAME: the name of your newcluster"}
{"input_text": "question: How do I run a notebook file in a Dataproc cluster?", "output_text": "To run a notebook file in a Dataproc cluster, follow these steps:1. In your managed notebooks instance's JupyterLab interface, select File >New > Notebook.2. Your Dataproc cluster's available kernels appear inthe Select kernel menu. Select the kernel that you want to use,and then click Select.3. Your new notebook file opens.4. Add code to your new notebook file, and run the code."}
{"input_text": "question: What is Dataproc Serverless Spark?", "output_text": "Dataproc Serverless Spark is a serverless environment that allows you to run Spark jobs without having to manage the underlying infrastructure."}
{"input_text": "question: What are the requirements for running a notebook file on Dataproc Serverless Spark?", "output_text": "The requirements for running a notebook file on Dataproc Serverless Spark are:* Your Dataproc Serverless session must run in the same region as your managed notebooks instance.* The Require OS Login (constraints/compute.requireOsLogin) constraint must not be enabled for your project.* You must provide a service account that has specific permissions.* Your Dataproc Serverless Spark session uses a Virtual Private Cloud (VPC) network to execute workloads. The VPC subnetwork must meet specific requirements."}
{"input_text": "question: How do I start a Dataproc Serverless Spark session?", "output_text": "To start a Dataproc Serverless Spark session, complete the following steps:1. In your managed notebooks instance's JupyterLab interface, select the Launcher tab, and then select Serverless Spark.2. If the Launcher tab is not open, select File > New Launcher to open it.3. The Create Serverless Spark session dialog appears.4. In the Session name field, enter a name for your session.5. In the Execution configuration section, enter the Service account that you want to use. If you don't enter a service account, your session will use the Compute Engine default service account.6. In the Network configuration section, select the Network and Subnetwork of a network that meets the requirements listed in Dataproc Serverless for Spark network configuration.7. Click Create.8. A new notebook file opens.9. The Dataproc Serverless Spark session that you created is the kernel that runs your notebook file's code."}
{"input_text": "question: hat is idle shutdown?", "output_text": "Idle shutdown is a feature that shuts down managed notebooks instances after a specified period of inactivity to help manage costs."}
{"input_text": "question: hat are the billing implications of idle shutdown?", "output_text": "While your instance is shut down, there are no CPU or GPU usage charges. However, disk storage charges still apply."}
{"input_text": "question: ow do I disable idle shutdown or change the default inactivity time period?", "output_text": "To disable idle shutdown or to change the inactivity time periodon an existing instance:In the Google Cloud console, go to the Managed notebooks page.Go to Managed notebooks Click the instance name.On the Notebook details page, click the Software and security tab.In the Modify software and security configuration section:To disable idle shutdown, clear the check mark next toEnable Idle Shutdown.To change the inactivity time period,in Time of inactivity before shutdown (Minutes), changethe number to the number of minutes of inactivity that you want.In the Google Cloud console, this settingcan be set to any integer value from 10 to 1440.Click Submit."}
{"input_text": "question: What is the naming convention for Vertex AI Workbench managed notebooks versions?", "output_text": "Managed notebooks version names match the naming convention of Deep Learning VM Images versions. Both are named with the letter M followed by a version number."}
{"input_text": "question: How frequently are managed notebooks versions updated?", "output_text": "Managed notebooks versions are not necessarily updated at the same time as Deep Learning VM. Managed notebooks versions are not necessarily updated as frequently as Deep Learning VM."}
{"input_text": "question: What is the relationship between managed notebooks versions and Deep Learning VM versions?", "output_text": "Managed notebooks and Deep Learning VM releases that have the same version number also have matching versions of frameworks and pre-installed packages."}
{"input_text": "question: How do I create a new notebook file in JupyterLab?", "output_text": "To open a notebook file, select File > New > Notebook. In the Select Kernel dialog, select Python (Local), and then click Select. Your new IPYNB file opens."}
{"input_text": "question: How do I query data from BigQuery using the %%bigquery magic command?", "output_text": "To query BigQuery data from within a JupyterLab notebook file, you can use the %%bigquery magic command and the BigQuery client library for Python."}
{"input_text": "question: How do I query data from BigQuery using the BigQuery client library directly?", "output_text": "In this section, you use the BigQuery client library for Python directly to read data into the Python notebook. The client library gives you more control over your queries and lets you use more complex configurations for queries and jobs."}
{"input_text": "question: ow do I access Cloud Storage buckets and files in JupyterLab?", "output_text": "To access Cloud Storage buckets and files in JupyterLab, follow these steps:1. In JupyterLab, click the Browse GCS button.2. The Cloud Storage integration lists the available buckets.3. Double-click a bucket to view the bucket's contents.4. Double-click to open folders within the bucket.5. Double-click to open a compatible file."}
{"input_text": "question: hat are the benefits of using the Cloud Storage integration in JupyterLab?", "output_text": "The benefits of using the Cloud Storage integration in JupyterLab include:* You can browse and access all of the Cloud Storage buckets and files that your instance has access to within the same project as your managed notebooks instance.* You can open and edit files that are compatible with JupyterLab, such as text files and notebook (IPYNB) files.* You can save files by using the File menu in JupyterLab."}
{"input_text": "question: hat are the requirements for using the Cloud Storage integration in JupyterLab?", "output_text": "The requirements for using the Cloud Storage integration in JupyterLab include:* You must have access to at least one Cloud Storage bucket in the same project as your managed notebooks instance.* You must have a managed notebooks instance in the same project as your Cloud Storage bucket."}
{"input_text": "question: hat are some common Python packages and R libraries for data visualization?", "output_text": "Some common Python packages and R libraries for data visualization that are pre-installed in managed notebooks instances include matplotlib, seaborn, and ggplot2."}
{"input_text": "question: hat is the BigQuery client library?", "output_text": "The BigQuery client library is a Python package that provides methods for interacting with BigQuery. It can be used to query data, create and manage tables, and perform other operations on BigQuery data."}
{"input_text": "question: here can I find an example of using the BigQuery client library with Python plotting capabilities?", "output_text": "You can find an example of using the BigQuery client library with Python plotting capabilities in the \"Interactive exploratory analysis of BigQuery data in a notebook\" Jupyter notebook. This notebook is available in Colab, Vertex AI Workbench managed notebooks, and on GitHub."}
{"input_text": "question: How do I read data from BigQuery using the %%bigquery magic command?", "output_text": "To read data from BigQuery using the %%bigquery magic command, you can use the following steps:1. Open a notebook file.2. Select the Python (Local) kernel.3. Enter the following statement:%%bigquerySELECT  country_code,  country_name,  COUNT(DISTINCT region_code) AS num_regionsFROM  `bigquery-public-data.google_trends.international_top_terms`WHERE  refresh_date = DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY)GROUP BY  country_code,  country_nameORDER BY  num_regions DESC;4. Click Run cell.5. The output will be displayed in the notebook."}
{"input_text": "question: How do I read data from BigQuery using the BigQuery client library directly?", "output_text": "To read data from BigQuery using the BigQuery client library directly, you can use the following steps:1. Import the BigQuery client library for Python.2. Initialize a BigQuery client.3. Retrieve the data using the client.query() method.4. Convert the results to a pandas DataFrame using the to_dataframe() method.5. The DataFrame will be displayed in the notebook."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a unified environment that lets you develop, test, and deploy machine learning (ML) models. It provides an integrated experience that includes all the tools you need for ML development, including Jupyter notebooks, pre-installed Python packages, and access to Vertex AI services."}
{"input_text": "question: How can I use Vertex AI custom training in a managed notebooks instance?", "output_text": "You can use Vertex AI custom training to create and train models from within your managed notebooks instance. To do this, install one of the Vertex AI client libraries on your instance, or use the Vertex AI API to send API requests from a Jupyter notebook file."}
{"input_text": "question: What is BigQuery ML?", "output_text": "BigQuery ML is a fully managed service that lets you train and deploy machine learning models using your BigQuery data. With BigQuery ML, you can use SQL commands to create models, and then use the models to get batch predictions."}
{"input_text": "question: What is the Vertex AI Workbench executor?", "output_text": "The Vertex AI Workbench executor is a tool that allows you to run notebook files on Vertex AI custom training."}
{"input_text": "question: What are the requirements for notebook code run by the executor?", "output_text": "The requirements for notebook code run by the executor are:- Ensure package installations are available to the executor- Use explicit project selection- Authenticate access using service accounts"}
{"input_text": "question: How do I create an execution?", "output_text": "To create an execution, open JupyterLab, upload a notebook file, and click the Executor icon in the JupyterLab toolbar. In the Submit notebooks to Executor dialog, select the notebook file that you want to run, and click Submit."}
{"input_text": "question: What are the steps to run a notebook with parameters?", "output_text": "1. Add the parameters tag to a notebook cell.2. Provide parameter values for your execution."}
{"input_text": "question: What are the required roles to run a notebook with parameters?", "output_text": "- Notebooks Viewer (roles/notebooks.viewer)- Vertex AI User (roles/aiplatform.user)- Storage Admin (roles/storage.admin)"}
{"input_text": "question: What is the format for specifying parameter values in an execution?", "output_text": "parameter1=value1,parameter2=value2. The format requires commasbetween parameter-value pairs, no spaces, and no quotation marks."}
{"input_text": "question: How do I create a GitHub repository?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) button and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: How do I clone a GitHub repository in my managed notebooks instance?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) button and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: How do I add my committed files to my GitHub repository?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) button and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: What are the billing implications of changing a machine type or GPU configuration?", "output_text": "Changing a machine type or GPU configuration can have billing implications. Each machine type and GPU configuration is billed at a different rate. Make sure you understand the pricing implications of making a change. For example, an e2-highmem-2 machine type costs more than an e2-standard-2 machine type. Changing a machine type might also affect sustained use discounts."}
{"input_text": "question: What are the considerations before changing a machine type or GPU configuration?", "output_text": "Before changing a machine type or GPU configuration, consider the following:* Billing implications: Each machine type and GPU configuration is billed at a different rate. Make sure you understand the pricing implications of making a change. For example, an e2-highmem-2 machine type costs more than an e2-standard-2 machine type. Changing a machine type might also affect sustained use discounts.* Moving to a smaller machine type: If you move from a machine type with more resources to a machine type with fewer resources, such as moving from an e2-standard-8 machine type to an e2-standard-2, you might run into hardware resource issues or performance limitations because smaller machine types are less powerful than larger machine types."}
{"input_text": "question: How do I change the machine type and configure GPUs of a managed notebooks instance?", "output_text": "To change the machine type and configure GPUs of a managed notebooks instance, follow these steps:1. Go to the Managed notebooks page in the Google Cloud console.2. Click the name of the instance that you want to modify.3. Click the Hardware tab.4. In the Modify hardware configuration section, select the Machine type that you want to use.5. If there are GPUs available for your instance's combination of zone, environment, and machine type, you can configure the GPUs.6. In the GPUs section, select the GPU type and Number of GPUs that you want to use.7. If you haven't already installed the required GPU drivers on your instance, select Install NVIDIA GPU driver automatically for me to install the drivers automatically on next startup.8. Click submit to confirm changes."}
{"input_text": "question: What are the requirements for upgrading a managed notebooks instance?", "output_text": "The Notebooks API must be enabled in the instance's Google Cloud project."}
{"input_text": "question: Which components of a managed notebooks instance are upgraded during an upgrade?", "output_text": "Machine learning frameworks, preinstalled Python dependencies, preinstalled operating system packages, and GPU drivers are upgraded."}
{"input_text": "question: Which components of a managed notebooks instance are preserved during an upgrade?", "output_text": "Machine learning data, notebooks, and user configurations are preserved."}
{"input_text": "question: What are some reasons to migrate to a new managed notebooks instance?", "output_text": "You might want to migrate to a new managed notebooks instancefor any of the following reasons:To use new capabilities that are only available in a newer version.To benefit from framework updates, package updates, and bug fixesthat have been implemented in a newer version."}
{"input_text": "question: What are some methods to migrate data and files from one managed notebooks instance to another?", "output_text": "To migrate data and files from one managed notebooks instance to another,consider using the following methods:Use GitHub: Copy your data and files to a GitHub repositoryby using the Git extension for JupyterLab.Use Cloud Storage and the terminal: Copy your data and filesto Cloud Storage and then to another instance by using the terminal.Use Cloud Storage within JupyterLab notebooks:Copy your data and files to Cloud Storage and then to another instanceby running commands within your respective instances' notebook cells."}
{"input_text": "question: What are the steps to migrate data and files to a new managed notebooks instance by using Cloud Storage and the terminal?", "output_text": "To migrate data and files to a new managed notebooks instanceby using Cloud Storage and the terminal, complete the following steps.In your managed notebooks instance'sJupyterLab interface, select File >New > Terminal to open a terminal window.Use the gsutil tool to copy your user datato a Cloud Storage bucket. The following example commandcopies all of the files from your instance's /home/jupyter/ directoryto a directory in a Cloud Storage bucket.gsutil cp -R /home/jupyter/* gs://BUCKET_NAMEPATHReplace the following:BUCKET_NAME: the name of yourCloud Storage bucketPATH: the path to the directorywhere you want to copy your files, for example: /copy/jupyter/Createa managed notebooks instance.In your new managed notebooks instance'sJupyterLab interface, select File >New > Terminal to open a terminal window.Use the gsutil tool to restore your data on the new instance.The following example command copies all ofthe files from a Cloud Storage directory to theyour new instance's /home/jupyter/ directory.gsutil cp gs://BUCKET_NAMEPATH* /home/jupyter/"}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed service that makes it easy to build, manage, and deploy machine learning (ML) models."}
{"input_text": "question: How can I control access to a managed notebooks instance?", "output_text": "You can control access to a managed notebooks instance at the project level or per instance."}
{"input_text": "question: What is the JupyterLab access mode?", "output_text": "The JupyterLab access mode determines who can use a managed notebooks instance's JupyterLab interface."}
{"input_text": "question: How do I grant access to a managed notebooks instance?", "output_text": "You grant access to a managed notebooks instance by setting an Identity and Access Management (IAM) policy on the instance."}
{"input_text": "question: What is the difference between granting access to an instance and granting access to a parent resource?", "output_text": "Granting access to an instance, instead of to a parent resource such as a project, folder, or organization, allows you to exercise the principle of least privilege."}
{"input_text": "question: What are some of the limitations of granting access to a managed notebooks instance?", "output_text": "Even granting a principal full access to a managed notebooks instance doesn't grant the ability to use the instance's JupyterLab interface."}
{"input_text": "question: What are the two JupyterLab access modes?", "output_text": "Single user only and Service account"}
{"input_text": "question: What is the difference between Single user only and Service account access modes?", "output_text": "Single user only grants access to only one specified user, while Service account grants access to a service account, which can be used to grant access to multiple users."}
{"input_text": "question: How do I grant access to a single user?", "output_text": "When you create a managed notebooks instance with Single user only access, you specify a user account. The specified user account is the only user with access to the JupyterLab interface. If the instance needs to access other Google Cloud resources, this user account must also have access to those Google Cloud resources."}
{"input_text": "question: hat is VPC Service Controls?", "output_text": "VPC Service Controls is a security service that enables you to connect and protect services within a virtual private cloud (VPC) network."}
{"input_text": "question: ow do I create a service perimeter using VPC Service Controls?", "output_text": "To create a service perimeter using VPC Service Controls, you need to:1. Create a service perimeter.2. Add projects to your service perimeter.3. Add services to your service perimeter."}
{"input_text": "question: ow do I configure my DNS entries using Cloud DNS?", "output_text": "To configure your DNS entries using Cloud DNS, you need to:1. Create a private managed zone for each domain that your VPC network needs to handle.2. Start a transaction.3. Add a DNS A record that reroutes traffic to Google's restricted IP addresses.4. Add a DNS CNAME record to point to the A record that you just added.5. Execute the transaction."}
{"input_text": "question: What is a user-managed notebooks instance?", "output_text": "A user-managed notebooks instance is a Deep Learning virtual machine (VM) instance that is prepackaged with JupyterLab."}
{"input_text": "question: What software comes preinstalled on a user-managed notebooks instance?", "output_text": "JupyterLab, Python 3, R version 4.x, Anaconda, and Nvidia packages with the latest Nvidia driver for GPU-enabled instances."}
{"input_text": "question: What are the benefits of using a user-managed notebooks instance?", "output_text": "User-managed notebooks instances are highly customizable and can be ideal for users who need a lot of control over their environment."}
{"input_text": "question: How do I create a user-managed notebooks instance?", "output_text": "In the Google Cloud console, go to the User-managed notebooks page. Click Create new. For Name, enter my-instance. Click Create."}
{"input_text": "question: How do I open JupyterLab?", "output_text": "Next to your user-managed notebooks instance's name, click Open JupyterLab."}
{"input_text": "question: How do I stop my instance?", "output_text": "In the Google Cloud console, go to the User-managed notebooks page. Select the instance that you want to stop. Click Stop."}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a managed service that lets you create and manage notebooks instances."}
{"input_text": "question: What is a user-managed notebooks instance?", "output_text": "A user-managed notebooks instance is a type of notebook instance that you can create and manage yourself."}
{"input_text": "question: How do I create a user-managed notebooks instance?", "output_text": "You can create a user-managed notebooks instance by using the Google Cloud console or the Google Cloud CLI."}
{"input_text": "question: What is a user-managed notebooks instance?", "output_text": "A user-managed notebooks instance is a type of notebook instance that you can create and manage yourself."}
{"input_text": "question: What is the difference between a user-managed notebooks instance and a managed notebooks instance?", "output_text": "A user-managed notebooks instance is a type of notebook instance that you can create and manage yourself, while a managed notebooks instance is a type of notebook instance that is created and managed by Google."}
{"input_text": "question: How do I create a user-managed notebooks instance?", "output_text": "To create a user-managed notebooks instance, you can use the Google Cloud console or the gcloud command-line tool."}
{"input_text": "question: How do I install Python packages from a user-managed notebooks instance?", "output_text": "To install Python packages from a user-managed notebooks instance, follow these steps:1. In the Google Cloud console, go to the User-managed notebooks page.2. Select the instance where you want to install dependencies.3. Click Open JupyterLab.4. To add a notebook file, you can use the menu or the Launcher.5. Rename your new notebook file.6. Install dependencies as follows:When you open your new notebook, there is a default code cell where you can enter code, in this case Python 3.To install the mxnet deep learning library in a Python 3 notebook, enter the followingcommand in the code cell:%pip install mxnet Click the run button to run the install command. When installation is complete, selectKernel > Restart kernelto restart the kernel and ensure the library is available for import.Select File > Save notebook to save the notebook."}
{"input_text": "question: What is the default OS for most frameworks?", "output_text": "Debian 11"}
{"input_text": "question: What is a user-managed notebooks instance?", "output_text": "A user-managed notebooks instance is a type of notebook instance that you can create and manage yourself."}
{"input_text": "question: What are the benefits of using a custom container for a user-managed notebooks instance?", "output_text": "Using a custom container for a user-managed notebooks instance gives you more control over the environment in which your notebooks run."}
{"input_text": "question: What are the requirements for creating a user-managed notebooks instance with a custom container?", "output_text": "To create a user-managed notebooks instance with a custom container, you must have a Google Cloud project and enable the Notebooks API for that project."}
{"input_text": "question: What is the notebooks manager?", "output_text": "A static HTML page that replaces the Google Cloud console page for Vertex AI Workbench."}
{"input_text": "question: What are the benefits of using the solution described in the document?", "output_text": "IT administrators centrally manage environments for user-managed notebooks, which provides flexibility to users. It also brings consistency across an organization and helps manage costs.Data practitioners access their user-managed notebooks environments quickly because this solution reduces the number of tasks that are required in order to do so. Users can then interact with services such as Cloud Storage or BigQuery from within the same tool that they use to develop user-managed notebooks."}
{"input_text": "question: What components make up the notebooks manager?", "output_text": "Admin Directory (User ReadOnly), Resource Manager API (Cloud APIs), `https://www.googleapis.com/auth/cloud-platform` scope (OAuth 2.0 Scope), Google Sign-In (Google API), Notebooks API (Cloud APIs), OAuth 2.0 Web Client ID (Resource), Cloud Storage Web static page (Resource)"}
{"input_text": "question: What is the purpose of the notebooks manager?", "output_text": "The notebooks manager limits Google Cloud console access for data practitioners but lets users interact with Google Cloud services through an extended notebooks UI."}
{"input_text": "question: What are the steps involved in setting up OAuth 2.0 flow for the notebooks manager web application?", "output_text": "1. Go to the Google Cloud console.2. Go to Google Cloud console 3. To set up a consent screen, follow the instructions in Setting up your OAuth consent screen.4. Create an OAuth 2.0 web client ID.5. Copy the client ID from the web application page in the Google Cloud console."}
{"input_text": "question: How do I deploy the notebooks manager?", "output_text": "1. Open Cloud Shell.2. Clone the repository that contains the code for this tutorial: git clone \"https://github.com/GoogleCloudPlatform/notebooks-extended-uis.git\"3.  If you do not have Terraform set up for Google Cloud, follow the instructions in Getting Started with the Google Provider to install Terraform with the Google Cloud provider.4. Set up OAuth 2.0 flow for the notebooks manager web application5. Deploy the notebooks manager"}
{"input_text": "question: What is Vertex AI Workbench?", "output_text": "Vertex AI Workbench is a unified environment that lets you develop, test, and deploy machine learning (ML) models. It provides an integrated experience that includes all the tools you need to build ML models, including Jupyter notebooks, pre-trained models, and custom training jobs."}
{"input_text": "question: What are the benefits of using Vertex AI Workbench?", "output_text": "There are many benefits to using Vertex AI Workbench, including:* A unified environment that includes all the tools you need to build ML models* Pre-trained models that you can use to jumpstart your projects* Custom training jobs that let you fine-tune models for your specific needs* An integrated experience that makes it easy to develop, test, and deploy ML models"}
{"input_text": "question: How can I access Vertex AI Workbench?", "output_text": "You can access Vertex AI Workbench through the Google Cloud console. To do so, go to the [Vertex AI Workbench page](https://console.cloud.google.com/vertex-ai/workbench) and click the **Create workbench** button."}
{"input_text": "question: What is the notebooks manager?", "output_text": "The notebooks manager is a UI that allows data scientists to create and manage user-managed notebooks."}
{"input_text": "question: What is the \"Origins are not set\" message?", "output_text": "This error occurs if the web client ID is missing the URL of the notebooks manager as a JavaScript origin."}
{"input_text": "question: What is the \"Client ID missing\" message?", "output_text": "This error occurs if the deployment is missing the OAuth 2.0 client ID reference in the HTML code."}
{"input_text": "question: ow do I load data from BigQuery into an R tibble?", "output_text": "To load BigQuery data into a tibble using the bigrquery R package, complete the following steps:1. Load the bigrquery R package.2. Store the project ID.3. Set your query.4. Run the query.5. Store the first 10 rows of the data in a tibble.6. Print the 10 rows of data."}
{"input_text": "question: hat is a user-managed notebooks instance?", "output_text": "A user-managed notebooks instance is a type of notebook instance that you can create and manage yourself."}
{"input_text": "question: ow do I open a JupyterLab notebook?", "output_text": "To open a JupyterLab notebook, complete the following steps:1. In the Google Cloud console, go to the User-managed notebooks page.2. Select the instance that you want to open.3. Click Open JupyterLab."}
{"input_text": "question: ow do I create a notebook file for use with R and Python?", "output_text": "To create a notebook file for use with R and Python, follow these steps:1. In the Google Cloud console, go to the User-managed notebooks page.2. Select the R instance where you want to install dependencies.3. Click Open JupyterLab.4. Select File > New > Notebook.5. Select the Python 3 kernel for your new notebook file.6. Select File > Rename notebook and change the name of the untitled notebook file to something meaningful, such as \"rpy2.ipynb.\""}
{"input_text": "question: ow do I import R objects with rpy2?", "output_text": "To import R objects with rpy2, follow these steps:1. In the notebook file's first code cell, enter the following command:```import rpy2.robjects as robjects```2. Click Run the selected cells and advance.3. Python imports rpy2's functions for accessing and manipulating R objects.4. To add a code cell, click the notebook file's Insert a cell below button.5. In the new code cell, enter the following:```pi = robjects.r['pi']```6. Click Run the selected cells and advance. Python stores an R pi object.7. To print the value of pi, in a new code cell, enter pi[0] and click Run the selected cells and advance."}
{"input_text": "question: hat is rpy2?", "output_text": "rpy2 is a Python package that allows you to run R code from Python. It provides a bridge between the two languages, allowing you to access R objects and functions from Python, and vice versa."}
{"input_text": "question: How can I monitor the health of my user-managed notebooks instances?", "output_text": "You can monitor the health of your user-managed notebooks instances in a few different ways. This page describes how to use the following methods:Use guest attributes to report system healthReport custom metrics to Cloud MonitoringReport system and application metrics to Monitoring by installing Monitoring on a user-managed notebooks instanceUse the diagnostic tool"}
{"input_text": "question: How can I use guest attributes to report system health?", "output_text": "You can use guest attributes to report the system health of the following core services:Docker serviceDocker reverse proxy agentJupyter serviceJupyter API"}
{"input_text": "question: How can I create a user-managed notebooks instance with system health guest attributes enabled?", "output_text": "You can use guest attributes to report the system health of the following core services:Docker serviceDocker reverse proxy agentJupyter serviceJupyter API"}
{"input_text": "question: How can I create a user-managed notebooks instance with system health guest attributes enabled?", "output_text": "A managed service that makes it easy to build, deploy, and manage machine learning (ML) models."}
{"input_text": "question: What is the difference between predefined roles and custom roles?", "output_text": "Predefined roles let you grant a set of related permissions to your Vertex AI Workbench resources at the project level. Custom roles enable you to choose a specific set of permissions, create your own role with those permissions, and grant the role to users in your organization."}
{"input_text": "question: What are the predefined user-managed notebooks IAM roles?", "output_text": "Notebooks Admin, Notebooks User, and Notebooks Viewer"}
{"input_text": "question: How can I grant access to a user-managed notebooks instance?", "output_text": "You can grant access to a user-managed notebooks instance by setting an Identity and Access Management (IAM) policy on the instance."}
{"input_text": "question: What is the difference between granting access to an instance and granting access to a parent resource?", "output_text": "Granting access to an instance, instead of to a parent resource such as a project, folder, or organization, allows you to exercise the principle of least privilege."}
{"input_text": "question: What are some of the limitations of granting access to a user-managed notebooks instance?", "output_text": "Even granting a principal full access to a user-managed notebooks instance doesn't grant the ability to use the instance's JupyterLab interface."}
{"input_text": "question: What are the two JupyterLab access modes?", "output_text": "Single user only and Service account"}
{"input_text": "question: What is the difference between Single user only and Service account access modes?", "output_text": "Single user only grants access only to the user that you specify. Service account grants access to a service account. You can grant access to one or more users through this service account."}
{"input_text": "question: How do I grant access to a single user?", "output_text": "Create a user-managed notebooks instance with Single user only access mode and specify the user account you want to grant access to."}
{"input_text": "question: What are the benefits of using CMEK with user-managed notebooks?", "output_text": "With CMEK, you can manage your keys within Cloud Key Management Service. For example, you can rotate or disable a key or you can set up a rotation schedule by using the Cloud KMS API."}
{"input_text": "question: What are the limitations of using CMEK with user-managed notebooks?", "output_text": "To decrease latency and to prevent cases where resources depend on services that are spread across multiple failure domains, Google recommends that you protect regional user-managed notebooks instances with keys in the same location."}
{"input_text": "question: How do I configure CMEK for my user-managed notebooks instance?", "output_text": "The following sections describe how to create a key ring and key in Cloud Key Management Service, grant the service account encrypter and decrypter permissions for your key, and create a user-managed notebooks instance that uses CMEK."}
{"input_text": "question: ow do I create a user-managed notebooks instance within a service perimeter?", "output_text": "To create a user-managed notebooks instance within a service perimeter, follow these steps:1. Create a user-managed notebooks instance.2. Create a service perimeter using VPC Service Controls.3. Add the project that contains your user-managed notebooks instance to the service perimeter.4. Add the Notebooks API to the service perimeter.5. Configure your DNS entries using Cloud DNS.6. Configure the service perimeter."}
{"input_text": "question: hat are the limitations of using a user-managed notebooks instance within a service perimeter?", "output_text": "The following are the limitations of using a user-managed notebooks instance within a service perimeter:* You can't use ANY_SERVICE_ACCOUNT or ANY_USER_ACCOUNT as an identity type for all Vertex AI Workbench operations.* You must have access to the following domains for authentication to Google Cloud:*.accounts.google.com*.accounts.youtube.com*.googleusercontent.com*.kernels.googleusercontent.com*.gstatic.com*.notebooks.cloud.google.com*.notebooks.googleapis.com"}
{"input_text": "question: ow do I access my user-managed notebooks instance from a workstation without internet?", "output_text": "To access your user-managed notebooks instance from a workstation without internet, verify with your IT administrator that you can access the following domains:*.accounts.google.com*.accounts.youtube.com*.googleusercontent.com*.kernels.googleusercontent.com*.gstatic.com*.notebooks.cloud.google.com*.notebooks.googleapis.comYou must have access to these domains for authentication toGoogle Cloud."}
{"input_text": "question: hat is Shielded VM?", "output_text": "Shielded VM offers verifiable integrity of Compute Engine VMinstances."}
{"input_text": "question: hat are the requirements and limitations of using Shielded VM with user-managed notebooks?", "output_text": "To use Shielded VM with user-managed notebooks,you must createa Deep Learning VM Images with a Debian 10 OS thatis versionM51or higher.While using Vertex AI Workbench, you can't useshielded VM user-managed notebooks instancesthat use GPU accelerators."}
{"input_text": "question: ow to create a user-managed notebooks instance using a shielded VM?", "output_text": "To create a shielded VM that you can use withuser-managed notebooks, complete the following steps:Select the image family that you want your instance to be basedon. Use the following Google Cloud CLI command tolist the available image families that are compatiblewith user-managed notebooksand Shielded VM. You can run the command inCloud Shellor any environment where the Google Cloud CLIis installed.gcloud compute images list  --project deeplearning-platform-release  --no-standard-images | grep debian-10Use the following command to create the Compute Engine instance.gcloud compute instances create nb-legacy2  --image-project=deeplearning-platform-release  --image-family=MY_IMAGE_FAMILY  --metadata=\"proxy-mode=service_account\"  --scopes=https://www.googleapis.com/auth/cloud-platform  --shielded-secure-boot  --zone=MY_ZONEReplace the following:MY_IMAGE_FAMILY: the image family name that youwant to use to create your VMMY_ZONE: the zone where you want your instanceto be locatedRegister your Compute Engine VM with theNotebooks API."}
{"input_text": "question: How do I create a GitHub repository?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) sign and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: How do I clone a GitHub repository in my user-managed notebooks instance?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) sign and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: How do I configure my user-managed notebooks instance with my GitHub user information?", "output_text": "To create a GitHub repository, follow these steps:1. Go to GitHub.com and sign in to your account.2. In the top-right corner of the page, click the plus (+) sign and select \"New repository\".3. Enter a name for your repository and click \"Create repository\".4. Your new repository will be created and you will be taken to the repository page."}
{"input_text": "question: What is the default snapshot type?", "output_text": "STANDARD"}
{"input_text": "question: What is the maximum length of a snapshot name?", "output_text": "63 characters"}
{"input_text": "question: What is the minimum length of a snapshot name?", "output_text": "1 character"}
{"input_text": "question: ow do I shut down a user-managed notebooks instance?", "output_text": "To shut down a user-managed notebooks instance, follow these steps:1. In the Google Cloud console, go to the User-managed notebooks page.2. Select the instance that you want to shut down, and then click square Stop."}
{"input_text": "question: hat are the billing implications of changing a machine type or GPU configuration?", "output_text": "Changing a machine type or GPU configuration can have billing implications. Each machine type and GPU configuration is billed at a different rate. Make sure you understand the pricing implications of making a change. For example, an e2-highmem-2 machine type costs more than an e2-standard-2 machine type. Changing a machine type might also affect sustained use discounts."}
{"input_text": "question: hat are the risks of moving to a smaller machine type?", "output_text": "Moving to a smaller machine type can have risks, such as running into hardware resource issues or performance limitations. Smaller machine types are less powerful than larger machine types, so if you move to a smaller machine type, you may experience issues with your instance."}
{"input_text": "question: hat are the steps to change the machine type and configure GPUs of a user-managed notebooks instance?", "output_text": "The steps to change the machine type and configure GPUs of a user-managed notebooks instance are as follows:1. In the Google Cloud console, go to the User-managed notebooks page.2. In the Notebook name column, click the name of the instance that you want to modify.3. The Notebook details page opens.4. Click the Hardware tab.5. In the Modify hardware configuration section, select the Machine type that you want to use.6. If there are GPUs available for your instance's combination of zone, environment, and machine type, you can configure the GPUs.7. In the GPUs section, select the GPU type and Number of GPUs that you want to use.8. If you haven't already installed the required GPU drivers on your instance, select Install NVIDIA GPU driver automatically for me to install the drivers automatically on next startup.9. After Vertex AI Workbench has finished updating the machine type and GPU configuration, you can start your user-managed notebooks instance."}
{"input_text": "question: What are the two ways to upgrade a user-managed notebooks instance?", "output_text": "Automatic upgrade and Manual upgrade"}
{"input_text": "question: What components are upgraded or preserved during an upgrade?", "output_text": "Machine learning frameworks, Machine learning data, Preinstalled dependencies, Preinstalled operating system packages, GPU drivers, Notebooks, User configurations are preserved. User-installed libraries, Local files in the /home/ directory, User-installed operating system packages are not preserved."}
{"input_text": "question: How can I enable automatic environment upgrades?", "output_text": "Select the Enable environment auto-upgrade checkbox and set aschedule when you create the instance."}
{"input_text": "question: What are the requirements for migrating data to a new user-managed notebooks instance?", "output_text": "You must have terminal access to your user-managed notebooks instance."}
{"input_text": "question: What are the steps to migrate data to a new user-managed notebooks instance?", "output_text": "1. In your user-managed notebooks instance's JupyterLab interface, select File > New > Terminal to open a terminal window.2. Use the gsutil tool to copy your user data to a Cloud Storage bucket. 3. Create a user-managed notebooks instance.4. In your new user-managed notebooks instance's JupyterLab interface, select File > New > Terminal to open a terminal window.5. Use the gsutil tool to restore your data on the new instance."}
{"input_text": "question: What are the benefits of migrating data to a new user-managed notebooks instance?", "output_text": "You might need to migrate your data to a new user-managed notebooks instance if you can't upgrade the environment of your existing instance."}
{"input_text": "question: What are the requirements for registering a legacy instance with the Notebooks API?", "output_text": "The source and destination zones must match and be a valid zone for the Notebooks API.Only dual-disk instances can use all user-managed notebooks features."}
{"input_text": "question: How do I migrate a legacy instance to a new user-managed notebooks instance?", "output_text": "To migrate a legacy instance to a new user-managed notebooks instance, you must create a user-managed notebooks instance and copy your user data from your legacy instance to the new instance."}
{"input_text": "question: How do I register a legacy instance with the Notebooks API?", "output_text": "To register a legacy instance with the Notebooks API, you can use the Google Cloud console or the Notebooks API."}
{"input_text": "question: ow can I access JupyterLab if I don't have HTTPS access?", "output_text": "To set upSSH port forwarding,complete the following steps, and then access your JupyterLab session through alocal browser:Run the following command by using the Google Cloud CLI inyour preferred terminal or inCloud Shell:gcloud compute ssh  --project PROJECT_ID  --zone ZONE  INSTANCE_NAME  -- -L 8080:localhost:8080Replace the following:PROJECT_ID: yourGoogle Cloud project IDZONE: the zonewhere your instance is locatedINSTANCE_NAME: the name of yourinstanceAccess your JupyterLab session through a local browser:If you ran the command on your local machine, visithttps://localhost:8080 to access JupyterLab.If you ran the command usingCloud Shell,access JupyterLab through the WebPreview on port 8080."}
{"input_text": "question: hat are some reasons why I might not have HTTPS access to JupyterLab?", "output_text": "The following are common reasons why you might not have HTTPS access toJupyterLab:Your JupyterLab instance's proxy-mode metadata settingis incorrect.Your network is configured to block internet access for thevirtual machines (VMs) running JupyterLab notebooks.Your user-managed notebooks instancedoesn't have an external IP address.Your VPC Service Controls settingsblock access to Container Registry."}
{"input_text": "question: ow can I resolve the issue if my JupyterLab instance's proxy-mode metadata setting is incorrect?", "output_text": "To make sure your proxy-mode metadata setting is valid, completethe following steps:In the Google Cloud console, go to the User-managed notebooks page.Go to User-managed notebooks Select the instance that you need to modify.Click Edit.Scroll down to the Custom metadata section, and either add or modifythe metadata to ensure there is a proxy-mode entry setto the correct value, for example: project_editors. Learn more about the possible values of the proxy-mode metadataentry.Click Save."}
{"input_text": "question: hat is Terraform?", "output_text": "Terraform is an infrastructure-as-code (IaC) tool that you can use to provision resources and permissions for multiple Google Cloud services, including Vertex AI."}
{"input_text": "question: hat are the benefits of using Terraform for Vertex AI?", "output_text": "Terraform allows you to describe the infrastructure that you want to provision in your Vertex AI project in a declarative and configuration-oriented syntax. This makes it easy to manage and provision your Vertex AI resources."}
{"input_text": "question: hat are some of the Terraform resources available for Vertex AI?", "output_text": "The following Terraform resources are available for Vertex AI products and services:* google_notebooks_environment* google_notebooks_instance* google_notebooks_instance_iam* google_notebooks_location* google_notebooks_runtime* google_notebooks_runtime_iam* google_vertex_ai_dataset* google_vertex_ai_endpoint* google_vertex_ai_featurestore* google_vertex_ai_featurestore_entitytype* google_vertex_ai_featurestore_entitytype_feature* google_vertex_ai_featurestore_iam* google_vertex_ai_metadata_store* google_vertex_ai_index* google_vertex_ai_index_endpoint"}
{"input_text": "question: What is AutoML?", "output_text": "AutoML is a way to create and train machine learning models with minimal technical knowledge and effort."}
{"input_text": "question: What types of models can I build using AutoML?", "output_text": "The types of models you can build using AutoML depend on the type of data that you have. * Image data: classification, object detection* Video data: action recognition, classification, object tracking* Text data: classification, entity extraction, sentiment analysis* Tabular data: classification/regression, forecasting"}
{"input_text": "question: What is the workflow for training and using an AutoML model?", "output_text": "The workflow for training and using an AutoML model consists of the following steps:1. Prepare your training data2. Create a dataset3. Train a model4. Evaluate and iterate on your model5. Get predictions from your model6. Interpret prediction results"}
{"input_text": "question: What is the workflow for training and using an AutoML model?", "output_text": "The following best practices apply to datasets that train models using      AutoML.AutoML models are optimized for photographs of objects      in the real world.The training data should be as close as possible to the data on which      predictions are to be made. For example, if your use case involves blurry      and low-resolution images (such as from a security camera), your training      data should be composed of blurry, low-resolution images. In general, you      should also consider providing multiple angles, resolutions, and      backgrounds for your training images.Vertex AI models can't generally predict labels that humans      can't assign. So, if a human can't be trained to assign labels by looking      at the image for 1-2 seconds, the model likely can't be trained to do it      either.We recommend about 1000 training images per label. The minimum per      label is 10. In general it takes more examples      per label to train models with multiple labels per image, and resulting      scores are harder to interpret.The model works best when there are at most 100x more images for the      most common label than for the least common label. We recommend removing      very low frequency labels.Consider including a None_of_the_above label and images that      don't match any of your defined labels. For example, for a flower      dataset, include images of flowers outside of your labeled varieties,      and label them as None_of_the_above."}
{"input_text": "question: What is the difference between single-label and multi-label image classification?", "output_text": "Single-label image classification means that each image in the dataset is assigned a single label, while multi-label image classification means that each image can be assigned multiple labels."}
{"input_text": "question: What is the purpose of the metadata_schema_uri field when creating a dataset?", "output_text": "The metadata_schema_uri field specifies the schema that will be used to validate the metadata associated with the images in the dataset."}
{"input_text": "question: How can I check the status of a dataset creation operation?", "output_text": "You can use the Operations API to check the status of a dataset creation operation. The Operations API provides methods for getting the status of a specific operation, as well as listing all operations for a given project."}
{"input_text": "question: What is the default value for the training budget?", "output_text": "The default value is 192,000 which represents one day in wall time, assuming 8 nodes are used."}
{"input_text": "question: What is the maximum value for the training budget?", "output_text": "800,000 milli node hours"}
{"input_text": "question: What is the minimum value for the training budget?", "output_text": "8,000 milli node hours"}
{"input_text": "question: What is the difference between precision and recall?", "output_text": "Precision is the fraction of classification predictions produced by the model that were correct. Recall is the fraction of predictions with this class that the model correctly predicted."}
{"input_text": "question: What is the purpose of the confusion matrix?", "output_text": "The confusion matrix helps you understand where your model is \"confusing\" two results."}
{"input_text": "question: How do I get evaluation metrics for a particular class or label?", "output_text": "You can get evaluation metrics for a particular class or label by using the Google Cloud console or API."}
{"input_text": "question: How do I get predictions from an image classification model?", "output_text": "You can get predictions from an image classification model by deploying the model to an endpoint and then sending requests to the endpoint with images."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "You can deploy a model to an endpoint using the Google Cloud console or the Vertex AI API."}
{"input_text": "question: What is the difference between online and batch predictions?", "output_text": "Online predictions are synchronous requests made to a model endpoint, while batch predictions are asynchronous requests."}
{"input_text": "question: What is the confidence score?", "output_text": "The confidence score is a measure of how confident the model is in its prediction. It is a number between 0 and 1, with 1 being the most confident."}
{"input_text": "question: What is the score threshold slider?", "output_text": "The score threshold slider is a tool that allows you to adjust the confidence threshold for all classes or labels, or an individual class or label."}
{"input_text": "question: What is batch prediction output?", "output_text": "Batch prediction output is the output of a batch prediction job. It is stored as JSON Lines files in Cloud Storage buckets. Each line of the JSON Lines file contains all annotation (label) categories and their corresponding confidence scores for a single image file."}
{"input_text": "question: What is the difference between creating a dataset using the Google Cloud console and the Vertex AI API?", "output_text": "The Google Cloud console provides a user-friendly interface for creating datasets, while the Vertex AI API allows for more programmatic control."}
{"input_text": "question: What is the purpose of the metadata_schema_uri field when creating a dataset?", "output_text": "The metadata_schema_uri field specifies the schema that will be used to validate the data in the dataset."}
{"input_text": "question: What are the steps involved in creating a dataset for training an image object detection model?", "output_text": "The steps involved in creating a dataset for training an image object detection model are:1. Create an empty dataset.2. Import or associate your data with the dataset.3. Label the data in the dataset.4. Split the data into training and testing sets.5. Train the model."}
{"input_text": "question: What is the difference between the three model types available for training an AutoML image object detection model?", "output_text": "The three model types available for training an AutoML image object detection model are:* CLOUD_1: A model best tailored to be used within Google Cloud, and which cannot be exported. Compared to the CLOUD_HIGH_ACCURACY_1 and CLOUD_LOW_LATENCY_1 models above, it is expected to have higher prediction quality and lower latency.* CLOUD_HIGH_ACCURACY_1: A model best tailored to be used within Google Cloud, and which cannot be exported. This model is expected to have a higher latency, but should also have a higher prediction quality than other cloud models.* CLOUD_LOW_LATENCY_1: A model best tailored to be used within Google Cloud, and which cannot be exported. This model is expected to have a low latency, but may have lower prediction quality than other cloud models."}
{"input_text": "question: How do I manually set the data split for training an AutoML image object detection model?", "output_text": "To manually set the data split for training an AutoML image object detection model, follow these steps:1. In the Google Cloud console, go to the Vertex AI section and select the Datasets page.2. Click the name of the dataset you want to use to train your model to open its details page.3. Click Train new model.4. For the training method, select AutoML.5. In the Choose where to use the model section, choose the model host location: Cloud, Edge, or Vertex AI Vision.6. Click Continue.7. Enter a name for the model.8. Expand Advanced options and select a data split option.9. Click Start Training."}
{"input_text": "question: How do I train an AutoML image object detection model using the Vertex AI API?", "output_text": "To train an AutoML image object detection model using the Vertex AI API, follow these steps:1. Create a new training pipeline.2. Set the training pipeline's display name.3. Set the training pipeline's input data config.4. Set the training pipeline's training task definition.5. Set the training pipeline's training task inputs.6. Set the training pipeline's model to upload.7. Start the training pipeline."}
{"input_text": "question: How do I get predictions from an image object detection model?", "output_text": "You can get predictions from an image object detection model by deploying the model to an endpoint and sending requests to the endpoint."}
{"input_text": "question: What is the difference between online and batch predictions?", "output_text": "Online predictions are synchronous requests made to a model endpoint. Batch predictions are asynchronous requests."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "You can deploy a model to an endpoint using the Google Cloud console or the Vertex AI API."}
{"input_text": "question: What is the format of the bounding boxes in the prediction results?", "output_text": "Bounding boxes are specified as:\"bboxes\":  [  [xMin, xMax, yMin, yMax],  ...]Where xMin and xMax are the minimum and maximum x values and yMin and yMax are the minimum and maximum y values respectively."}
{"input_text": "question: What is the format of the prediction results?", "output_text": "Batch AutoML image object detection prediction responses are stored asJSON Lines files in Cloud Storage buckets. Each line of the JSON Linesfilecontains all objects found in a single image file. Each found object hasan annotation (label and normalized bounding box) with a correspondingconfidence score."}
{"input_text": "question: What is the format of the JSON Lines file?", "output_text": "Each line of the JSON Linesfilecontains all objects found in a single image file. Each found object hasan annotation (label and normalized bounding box) with a correspondingconfidence score."}
{"input_text": "question: What is base64 encoding?", "output_text": "Base64 encoding is a way of converting binary data into a text format that can be easily transmitted over the internet."}
{"input_text": "question: How do I encode an image using base64?", "output_text": "You can encode an image using base64 by using the base64 command line tool, or by using a client library in your preferred programming language."}
{"input_text": "question: What are the benefits of using base64 encoding?", "output_text": "Base64 encoding is useful for sending binary data over the internet, as it can be easily transmitted and decoded. It is also useful for storing binary data in text files, as it can be easily read and edited."}
{"input_text": "question: How do I export an AutoML Edge model?", "output_text": "Use the following code samples to identify an AutoML Edge model,specify an output file storage location, and then send the export model request."}
{"input_text": "question: What formats can I export an AutoML Edge image classification model to?", "output_text": "TF Lite, Edge TPU TF Lite, Container, Core ML, Tensorflow.js"}
{"input_text": "question: What is the output of the export model operation?", "output_text": "The response contains information about specifications as well as theOPERATION_ID."}
{"input_text": "question: What is the output of the export model operation?", "output_text": "Vertex AI lets you perform machine learning with tabular data using simple processes and interfaces."}
{"input_text": "question: What are the benefits of using Tabular Workflow for End-to-End AutoML?", "output_text": "BenefitsSupports large datasets that are multiple TB in size and have up to 1000 columns.Allows you to improve stability and lower training time by limiting the search space of architecture types or skipping architecture search.Allows you to improve training speed by manually selecting the hardware used for training and architecture search.Allows you to reduce model size and improve latency with distillation or by changing the ensemble size.Each AutoML component can be inspected in a powerful pipelines graph interface that lets you see the transformed data tables, evaluated model architectures, and many more details.Each AutoML component gets extended flexibility and transparency, such as being able to customize parameters, hardware, view process status, logs, and more."}
{"input_text": "question: What is Tabular Workflow for TabNet?", "output_text": "Tabular Workflow for TabNet is a pipeline that you can use to train classification or regression models. TabNet uses sequential attention to choose which features to reason from at each decision step. This promotes interpretability and more efficient learning because the learning capacity is used for the most salient features."}
{"input_text": "question: What is Tabular Workflow for TabNet?", "output_text": "Gather your data, prepare your data, train, evaluate, and deploy and predict."}
{"input_text": "question: What is a forecasting model?", "output_text": "A forecasting model predicts a sequence of values."}
{"input_text": "question: What is a binary classification model?", "output_text": "A binary classification model predicts a binary outcome (one of two classes)."}
{"input_text": "question: What is Tabular Workflows?", "output_text": "Tabular Workflows is a set of integrated, fully managed, and scalable pipelines for end-to-end ML with tabular data."}
{"input_text": "question: What are the benefits of using Tabular Workflows?", "output_text": "The benefits of using Tabular Workflows are: it is fully managed, easy to scale, optimized for performance, and deeply integrated with other Vertex AI products."}
{"input_text": "question: What are the different types of Tabular Workflows available?", "output_text": "The different types of Tabular Workflows available are: Feature Transform Engine, End-to-End AutoML, TabNet, Wide & Deep, and Forecasting."}
{"input_text": "question: What are the main steps of the feature engineering process?", "output_text": "The main steps of the feature engineering process are:1. Generate dataset splits for training, evaluation, and testing.2. Generate input dataset statistics dataset_stats that describe the raw dataset.3. Perform feature selection.4. Process the transform configuration using the dataset statistics, resolving automatic transformation parameters into manual transformation parameters.5. Transform raw features into engineered features."}
{"input_text": "question: What is the purpose of feature selection?", "output_text": "The main purpose of feature selection is to reduce the number of features used in the model. The reduced feature set is expected to capture most of the label's information in a more compact manner. Feature selection allows you to reduce the cost of training and serving models without significantly impacting model quality."}
{"input_text": "question: What are the different feature selection algorithms offered by Vertex AI?", "output_text": "The different feature selection algorithms offered by Vertex AI are:- Adjusted Mutual Information (AMI)- Conditional Mutual Information Maximization (CMIM)- Joint Mutual Information Maximization (JMIM)- Maximum Relevance Minimum Redundancy (MRMR)"}
{"input_text": "question: What is Tabular Workflow for End-to-End AutoML?", "output_text": "A complete AutoMLpipeline for classification and regression tasks."}
{"input_text": "question: What are the benefits of using Tabular Workflow for End-to-End AutoML?", "output_text": "Supports large datasets, improve stability and lower training time, improve training speed, reduce model size and improve latency, powerful pipelines graph interface, extended flexibility and transparency"}
{"input_text": "question: What are the components of the Tabular Workflow for End-to-End AutoML pipeline?", "output_text": "feature-transform-engine, split-materialized-data, merge-materialized-splits, automl-tabular-stage-1-tuner, automl-tabular-cv-trainer, automl-tabular-ensemble, condition-is-distill, automl-tabular-infra-validator, model-upload, condition-is-evaluation"}
{"input_text": "question: What are the steps involved in training a model with End-to-End AutoML?The steps involved in training a model with End-to-End AutoML are as follows:Prepare your training data.Create a Vertex AI dataset.Enable the following APIs: Vertex AI, Dataflow, Compute Engine, Cloud Storage.Enable the APIs.Make sure that your project's service accounts have the necessary roles assigned to them.Get the URI of the previous hyperparameter tuning result (if applicable).Train a model. Question: How do I get online predictions and explanations from my tabular classification or regression models?", "output_text": "You must deploy a model to an endpoint before that model can be used to serveonline predictions. Deploying a model associates physical resources with themodel so it can serve online predictions with low latency."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "Use one of the following methods to deploy a model: Google Cloud console In the Google Cloud console, in the Vertex AI section, go tothe Models page.Go to the Models page Click the name of the model you want to deploy to open its details page.Select the Deploy & Test tab.If your model is already deployed to any endpoints, they are listed in theDeploy your model section.Click Deploy to endpoint.In the Define your endpoint page, configure as follows:You can choose to deploy your model to a new endpoint or an existing endpoint.To deploy your model to a new endpoint, selectradio_button_checkedCreate new endpointand provide a name for the new endpoint.To deploy your model to an existing endpoint, selectradio_button_checkedAdd to existing endpointand select the endpoint from the drop-down list.You can add more than one model to an endpoint, and you can add a modelto more than one endpoint. Learn more.Click Continue.In the Model settings page, configure as follows:If you're deploying your model to a new endpoint, accept 100 for the        Traffic split. If you're deploying your model to an existing endpoint that has one or        more models deployed to it, you must update the Traffic split        percentage for the model you are deploying and the already deployed models        so that all of the percentages add up to 100%.Enter the Minimum number of compute nodes you want to provide for        your model.     This is the number of nodes available to this model at all times.                You are charged for the nodes used, whether to handle prediction load        or for standby (minimum) nodes, even without prediction traffic.        See the pricing page.     Select your Machine type.Larger machine resources will increase your prediction performance        and increase costs.     Learn how to change thedefault settings for prediction logging.Click ContinueIn the Model monitoring page, click Continue.In the Monitoring objectives page, configure as follows:Enter the location of your training data.Enter the name of the target column.Click Deploy to deploy your model to the endpoint. API When you deploy a model using the Vertex AI API, you complete thefollowing steps:Create an endpoint if needed.Get the endpoint ID.Deploy the model to the endpoint."}
{"input_text": "question: How do I get the endpoint ID?", "output_text": "To get the endpoint ID, use the following steps:1. Go to the [Vertex AI Endpoints page](https://console.cloud.google.com/vertex-ai/endpoints).2. Click the name of the endpoint that you want to get the ID for.3. The endpoint ID is displayed in the Endpoint details page."}
{"input_text": "question: hat is TabNet?", "output_text": "TabNet is a deep learning model that uses sequential attention to choose which features to reason from at each decision step. This makes it more interpretable and efficient than other deep learning models."}
{"input_text": "question: hat are the benefits of using TabNet on Vertex AI Pipelines?", "output_text": "The benefits of using TabNet on Vertex AI Pipelines are:* Automatic hyperparameter tuning* Integration with Vertex AI* Inherent model interpretability* GPU training support"}
{"input_text": "question: hat are the components of the TabNet CustomJob pipeline?", "output_text": "The components of the TabNet CustomJob pipeline are:* Feature transform engine* Split materialized data* TabNet trainer* AutoML tabular infra validator* Model upload* Condition run evaluation"}
{"input_text": "question: What is TabNet?", "output_text": "TabNet is a deep learning model that is specifically designed for tabular data."}
{"input_text": "question: What are the two versions of Tabular Workflow for TabNet?", "output_text": "The two versions of Tabular Workflow for TabNet are HyperparameterTuningJob and CustomJob."}
{"input_text": "question: What is the difference between HyperparameterTuningJob and CustomJob?", "output_text": "HyperparameterTuningJob searches for the best set of hyperparameter values to use for model training. CustomJob lets you specify the hyperparameter values to use for model training."}
{"input_text": "question: What is the difference between batch prediction and online prediction?", "output_text": "Batch prediction is an asynchronous request, while online prediction is a synchronous request. Use online predictions when you are making requests in response to application input or in other situations where you require timely inference."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "You can deploy a model to an endpoint using the Google Cloud console or the Vertex AI API."}
{"input_text": "question: What is the minimum number of compute nodes that I can provide for my model?", "output_text": "The minimum number of compute nodes that you can provide for your model is 1."}
{"input_text": "question: What is Wide & Deep?", "output_text": "Wide & Deep is a machine learning model that jointly trains wide linear models and deep neural networks."}
{"input_text": "question: What are the benefits of using Wide & Deep?", "output_text": "The benefits of using Wide & Deep are that it is integrated with Vertex AI and that it is a managed instance of Vertex AI Pipelines."}
{"input_text": "question: What are the components of the Wide & Deep CustomJob pipeline?", "output_text": "The components of the Wide & Deep CustomJob pipeline are: feature-transform-engine, split-materialized-data, wide-and-deep-trainer, automl-tabular-infra-validator, model-upload, and condition-run-evaluation-2."}
{"input_text": "question: What is Wide & Deep?", "output_text": "Wide & Deep learning is a machine learning model that combines the strengths of linear models and deep neural networks. Linear models are good at capturing linear relationships between features and the target variable, while deep neural networks are good at capturing non-linear relationships. Wide & Deep learning combines the two models to create a model that can capture both linear and non-linear relationships."}
{"input_text": "question: What are the benefits of using Wide & Deep?", "output_text": "Wide & Deep learning has a number of benefits over traditional machine learning models. These benefits include:* Improved accuracy: Wide & Deep learning models can achieve higher accuracy than traditional machine learning models on a variety of tasks.* Reduced training time: Wide & Deep learning models can be trained more quickly than traditional machine learning models.* Scalability: Wide & Deep learning models can be scaled to handle large datasets."}
{"input_text": "question: What are the use cases for Wide & Deep?", "output_text": "Wide & Deep learning can be used for a variety of tasks, including:* Classification: Wide & Deep learning can be used to classify data into different categories.* Regression: Wide & Deep learning can be used to predict the value of a continuous variable.* Ranking: Wide & Deep learning can be used to rank items based on their relevance to a query.* Recommendation: Wide & Deep learning can be used to recommend items to users based on their preferences."}
{"input_text": "question: How do I get online predictions from my tabular classification or regression models?", "output_text": "You can get online predictions from your tabular classification or regression models by deploying the model to an endpoint and then using the endpoint to serve predictions."}
{"input_text": "question: What is the difference between online predictions and batch predictions?", "output_text": "Online predictions are synchronous requests, while batch predictions are asynchronous requests. This means that online predictions are made in real-time, while batch predictions are made in the background."}
{"input_text": "question: How do I deploy a model to an endpoint?", "output_text": "To deploy a model to an endpoint using the Google Cloud console, go to the Models page and click the name of the model you want to deploy. Then, select the Deploy & Test tab and click Deploy to endpoint.To deploy a model to an endpoint using the Vertex AI API, use the endpoints.create method."}
{"input_text": "question: What is the maximum size of a CSV file that can be used as input for batch prediction?", "output_text": "10 GB"}
{"input_text": "question: What is the maximum size of a BigQuery table that can be used as input for batch prediction?", "output_text": "100 GB"}
{"input_text": "question: What is the default maximum number of nodes for a batch prediction job?", "output_text": "10"}
{"input_text": "question: What is Tabular Workflow for Forecasting?", "output_text": "Tabular Workflow for Forecasting is a complete pipeline for forecasting tasks."}
{"input_text": "question: What are the benefits of using Tabular Workflow for Forecasting?", "output_text": "The benefits of using Tabular Workflow for Forecasting include support for large datasets, improved stability and lower training time, improved training speed, reduced model size and improved latency, and a powerful pipelines graph interface."}
{"input_text": "question: What are the components of the Tabular Workflow for Forecasting pipeline?", "output_text": "The components of the Tabular Workflow for Forecasting pipeline are feature-transform-engine, training-configurator-and-validator, split-materialized-data, calculate-training-parameters-2, get-hyperparameter-tuning-results, automl-forecasting-stage-1-tuner or automl-forecasting-stage-2-tuner, get-prediction-image-uri-2, automl-forecasting-ensemble-2, model-upload-2, and should_run_model_evaluation."}
{"input_text": "question: What is Tabular Workflow for Forecasting?", "output_text": "Tabular Workflow for Forecasting is a Vertex AI service that lets you train forecasting models on structured data."}
{"input_text": "question: What are the different model training methods supported by Tabular Workflow for Forecasting?", "output_text": "Tabular Workflow for Forecasting supports the following model training methods:Time series Dense Encoder (TiDE)Temporal Fusion Transformer (TFT)AutoML (L2L)Seq2Seq+"}
{"input_text": "question: What is the difference between the context window and the forecast horizon?", "output_text": "The context window determines how far back the model looks during training (and for forecasts). The forecast horizon determines how far into the future the model forecasts the target value for each row of prediction data."}
{"input_text": "question: What is the difference between online predictions and batch predictions?", "output_text": "Online predictions are synchronous requests, while batch predictions are asynchronous requests."}
{"input_text": "question: What is the purpose of an endpoint in Vertex AI?", "output_text": "An endpoint is a set of physical resources that you can deploy your model to."}
{"input_text": "question: What is the format of the input instance for online predictions?", "output_text": "Each input instance is a Python dictionary with the same schema that the model was trained on. It must contain an available at forecast key-value pair that corresponds to the time column and an unavailable at forecast key-value pair that contains the historical values of the targeted prediction column."}
{"input_text": "question: What is the cost of training a model using a Tabular Workflow?", "output_text": "The cost of training a model using a Tabular Workflow depends on the following factors:* The number of machines that you use. * The type of machines that you use. * The length of time for which the machines are in use."}
{"input_text": "question: What are the dependent services of Tabular Workflows?", "output_text": "The dependent services of Tabular Workflows are:* Dataflow* BigQuery* Cloud Storage* Vertex AI Pipelines* Vertex AI Training"}
{"input_text": "question: What is the cost of the dependent services of Tabular Workflows?", "output_text": "The cost of the dependent services of Tabular Workflows depends on the usage of each service. Please refer to the pricing pages of each service for more information."}
{"input_text": "question: What is the service account for Vertex AI Pipelines in Tabular Workflow for End-to-End AutoML?", "output_text": "PROJECT_NUMBER-compute@developer.gserviceaccount.com"}
{"input_text": "question: What roles must be granted to the service account for Vertex AI Pipelines in the pipeline project?", "output_text": "Vertex AI User, Storage Object Admin, Dataflow Developer, Service Account User"}
{"input_text": "question: What roles must be granted to the service account for Dataflow worker in the pipeline project?", "output_text": "Dataflow Worker, Storage Object Admin, Additional roles based on your data source type"}
{"input_text": "question: hat is the recommended quota for Compute Engine API CPUs?", "output_text": "num_concurrent_pipeline x 440 CPUs"}
{"input_text": "question: hat is the recommended quota for Compute Engine API Persistent Disk Standard (GB)?", "output_text": "num_concurrent_pipeline x 5TB persistent disk"}
{"input_text": "question: hat is the recommended quota for Vertex AI API Restricted image training CPUs for N1/E2 machine types per region?", "output_text": "num_concurrent_pipeline x 440 CPUs"}
{"input_text": "question: What are the three types of models that can be created with Vertex AI?", "output_text": "Binary classification models, multi-class classification models, and regression models."}
{"input_text": "question: What is the difference between binary classification and multi-class classification?", "output_text": "Binary classification models predict one of two classes, while multi-class classification models predict one class from three or more discrete classes."}
{"input_text": "question: What is a regression model used for?", "output_text": "Regression models are used to predict a continuous value."}
{"input_text": "question: What are the requirements for the target column in Vertex AI?", "output_text": "The target column must not contain null values and must be either Categorical or Numerical. If it is Categorical, it must have at least 2 and no more than 500 distinct values."}
{"input_text": "question: What are the requirements for the number of columns in Vertex AI?", "output_text": "The dataset must have at least 2 and no more than 1,000 columns. The maximum number of columns includes both feature and non-feature columns."}
{"input_text": "question: What are the requirements for the number of rows in Vertex AI?", "output_text": "The dataset must have at least 1,000 and no more than 100,000,000 rows. Depending on how many features your dataset has, 1,000 rows might not be enough to train a high-performing model."}
{"input_text": "question: What is the difference between creating a dataset from local files and creating a dataset from Cloud Storage?", "output_text": "When you create a dataset from local files, the files are imported into Cloud Storage. When you create a dataset from Cloud Storage, the files are not imported into Cloud Storage."}
{"input_text": "question: What is the format of the request body when creating a dataset with data in Cloud Storage?", "output_text": "The request body should be in the following format:{  \"display_name\": \"DATASET_NAME\",  \"metadata_schema_uri\": \"METADATA_SCHEMA_URI\",  \"metadata\": {    \"input_config\": {      \"gcs_source\": {        \"uri\": [URI1, URI2, ...]      }    }  }}"}
{"input_text": "question: What is the difference between creating a dataset with data in Cloud Storage and creating a dataset with data in BigQuery?", "output_text": "When you create a dataset with data in Cloud Storage, the data is not imported into Vertex AI. When you create a dataset with data in BigQuery, the data is imported into Vertex AI."}
{"input_text": "question: What is the difference between AutoML and manual training?", "output_text": "AutoML is a good choice for a wide range of use cases, while manual training gives you more control over the training process."}
{"input_text": "question: What is the purpose of the weight column?", "output_text": "The weight column allows you to specify the importance of each row in the training data. This can be useful if you have some rows that are more important than others."}
{"input_text": "question: What is the purpose of the optimization objective?", "output_text": "The optimization objective is the metric that the model will be trained to optimize. For example, if you are training a classification model, you might want to optimize for accuracy or F1 score."}
{"input_text": "question: What are evaluation metrics?", "output_text": "Evaluation metrics are measurements that evaluate how well a model performs."}
{"input_text": "question: How do I get evaluation metrics?", "output_text": "You can get evaluation metrics through the Google Cloud console or API."}
{"input_text": "question: What is an evaluation slice?", "output_text": "An evaluation slice shows evaluation metrics for a particular class or label."}
{"input_text": "question: How can I view the hyperparameter logs for my model?", "output_text": "You can use Google Cloud console to access the hyperparameter logs of thefinal model and the hyperparameter logs of the tuning trials."}
{"input_text": "question: What fields are included in Vertex AI model logs?", "output_text": "Vertex AI model logs have, among other fields:labels: The log_type field is set to automl_tables.jsonPayload: The specific details of the log entry, provided in JSONobject format. For details, see Payload contents for the hyperparameter log of the final modelor Payload contents for the hyperparameter log of a tuning trial.timestamp: The date and time when the model was created or the trial was run."}
{"input_text": "question: What is the difference between the hyperparameter log of the final model and the hyperparameter log of a tuning trial?", "output_text": "The hyperparameter log of the final model contains amodelParameters field. This field contains one entry for each model thatcontributes to the final ensemble model. Each entry has a hyperparametersfield, whose contents depend on the model type. For details, see List of hyperparameters.The hyperparameter log of a tuning trial contains the following fields:FieldTypeDescriptionmodelStructureJSON        A description of the Vertex AI model structure.        This field contains a modelParameters field. The        modelParameters field has a hyperparameters        field, whose contents depend on the model type. For details, see        List of hyperparameters.      trainingObjectivePointJSONThe optimization objective used for model training.    This entry includes a timestamp and an objective value at the    time the log entry was recorded."}
